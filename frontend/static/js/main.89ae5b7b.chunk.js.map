{"version":3,"sources":["statics/rms.png","statics/structure.png","statics/transient.png","statics/axis.png","default_value.js","util/cache.js","util/Navbar.js","util/Error.js","Auth/Login.js","Auth/Signup.js","util/loading.js","tracks/deleteTrack.js","tracks/readTrack.js","pages/profile.js","util/secContext.js","tracks/searchBar.js","redux/action/dataActions.js","components/radioField.js","components/rangeField.js","components/incDecField.js","components/inputField.js","components/checkField.js","components/materialField.js","components/assignField.js","components/headers.js","components/locationField.js","pages/configManager.js","util/progress.js","components/resultsMonitor.js","components/slider.js","components/plotlyPlot.js","components/resultStructure.js","pages/resultsExplorer.js","pages/result.js","tracks/createTrack.js","tracks/download.js","util/download.js","tracks/reset.js","pages/home.js","components/balls.js","components/structureEditor.js","pages/stucture.js","redux/reducer/dataReducers.js","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","sections_name","pics","plots","noPlots","optionalField","optionalFieldExist","optionalIncDecField","default_values","gen_vor","cartItemsVar","makeVar","isLoggedIn","localStorage","getItem","currentSection","freshSimedDict","map","pic","configSecName","structSecName","mainSectionName","cache","InMemoryCache","typePolicies","Query","fields","read","cartItems","IS_LOGGED_IN_QUERY","gql","styles","makeStyles","theme","root","position","flexGrow","margin","padding","grow","display","alignItems","textDecoration","logo","marginRight","spacing","fontSize","faceIcon","color","username","active","backgroundColor","borderRadius","Navbar","props","userSection","classes","configVar","useReactiveVar","mainVar","structVar","query","GET_SELF_QUERY","fetchPolicy","error","loading","data","to","userself","id","className","style","justifyContent","AccountCircleOutlined","Typography","variant","noWrap","Button","class","Grid","container","width","flexDirection","item","xs","AppBar","Toolbar","onClick","e","clsx","paddingTop","paddingBottom","background","minHeight","name","key","withStyles","snackbar","useState","open","setOpen","Snackbar","message","action","size","LOGIN_MUTATION","form","marginTop","account_trans","textAlign","cursor","history","setusername","password","setPassword","handleSubmit","tokenAuth","client","a","preventDefault","res","setItem","token","writeQuery","push","console","log","direction","mutation","variables","onError","called","onSubmit","FormControl","required","fullWidth","InputLabel","htmlFor","Input","onChange","event","target","value","type","disabled","trim","submit","SIGNUP_MUTATION","setUsername","email","setEmail","Loading","this","navbar","Component","DELETE_TRACK_MUTATION","DeleteTrack","url","track","update","deleteTrack","readQuery","GET_TRACKS_QUERY","index","findIndex","slice","delete_track","DeleteOutline","Axios","delete","catch","Track","Card","justify","Radio","checked","configUsed","setconfigUsed","title","description","TrackHead","Profile","match","params","GET_USER_QUERY","user","musicSet","secContext","createContext","changeName","getPlots","callback","dispatch","get","then","plotHtml","payload","plot","setConfig","cat","field","mapActiontoProps","mapStateToProps","state","RadioField","connect","choices","indexSec","indexOf","input","configValues","marginBottom","replaceAll","choice","newInput","Object","entries","values","sim_types","sim_types_fields","includes","RangeField","seterror","handleChange","isNaN","newError","TextField","keys","length","helperText","IncDecField","parseFloat","inputProps","min","InputField","CheckField","Checkbox","MaterialField","addValue","setaddValue","i","replace","String","Tooltip","placement","splice","remove_mat","opacity","add_mat","AssignField","inputSimType","indexGeo","eps","num_particles","newInputSimType","current_particle","material_name","inputMap","Math","round","Select","displayEmpty","eps_one","j","MenuItem","toFixed","pop","headers","range","coord","material","location","material_assign","checkbox","radio","LocationField","sec","React","useEffect","JSON","stringify","useQuery","Paper","CircularProgressWithLabel","Box","CircularProgress","top","left","bottom","right","component","useStyles","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","LinearProgressWithLabel","BorderLinearProgress","height","colorPrimary","palette","grey","bar","LinearProgress","mr","minWidth","Download","document","getElementById","src","defaults","baseURL","SimProgress","progress","setexpand","IconButton","outline","aria-expanded","ExpandMoreRounded","current","total","percent","progress_data","setprogress_data","progress_data_local","setPlots","iframe","contentDocument","write","close","update_progress","status_url","parseInt","setTimeout","elevation","post","Location","alert","valuetext","RangeSlider","setValue","Slider","newValue","valueLabelDisplay","aria-labelledby","getAriaValueText","marks","makeArr","startValue","stopValue","cardinality","arr","step","setSlider","rms","sliderValue","max","zmin","zmax","plotData","minRow","row","apply","maxRow","diff","markers","valueRange","markerRange","v","label","small","z","x","y","hoverongaps","layout","val","structure","Viz","mainPlot","controls","Result","defaultImages","transient","img","CREATE_TRACK_MUTATION","flexWrap","dialog","dialogPaper","maxHeight","textField","cancel","save","button","icon","fab","zIndex","setTitle","hashtag","setHashtag","setDescription","file","setFile","submitting","setSubmitting","fileError","setFileError","tabOpen","setTabOpen","tracks","handleAudioChange","selectedFile","files","handleAudioUpload","FormData","append","axios","createTrack","uploadedUrl","config","setAllConfig","withTrack","obj","Dialog","paper","DialogTitle","TabContext","TabList","aria-label","Tab","DialogContent","TabPanel","onCompleted","concat","DialogContentText","placeholder","rows","Boolean","accept","StorageOutlined","FormHelperText","DialogActions","maxWidth","f","File","useMutation","GetApp","filename","text","element","createElement","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","download","Refresh","Home","Draggable","isDragging","originalX","originalY","translateX","initial","translateY","lastTranslateX","lastTranslateY","handleMouseDown","clientX","clientY","window","addEventListener","handleMouseMove","handleMouseUp","onDragStart","setState","onDrag","prevState","removeEventListener","onDragEnd","children","Container","onMouseDown","styled","div","attrs","css","convX","px","convY","py","convPx","convPy","matrixPosXY","matrixSizeXY","matrixPos","matrixSize","sourcePosXY","sourceSizeXY","sourceSize","sourcePos","backgroundImage","axis","backgroundRepeat","backgroundSize","border","Structure","initialState","parse","reducers","combineReducers","slider","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunkMiddleware","enhancers","applyMiddleware","enhancer","store","createStore","httpLink","createHttpLink","uri","authLink","setContext","_","Authorization","ApolloClient","fetchOptions","credentials","link","App","Provider","changeSecName","exact","path","ResultsExplorer","Login","Signup","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.89ae5b7b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rms.311f252c.png\";","module.exports = __webpack_public_path__ + \"static/media/structure.aba1d70a.png\";","module.exports = __webpack_public_path__ + \"static/media/transient.3efca697.png\";","module.exports = __webpack_public_path__ + \"static/media/axis.ad9d7599.png\";","export const sections_name = ['Visualization', 'General', 'Geometry', 'Simulation', 'Source']\r\nexport const pics = ['structure'];\r\nexport const plots = ['eps', 'rms_block', 'rms_xy', 'rms_block_max', 'rms_particle_only', 'rms_particle_only_max', 'rms_block_log', 'rms_particle_only_log']\r\nexport const noPlots = ['rms_xy', 'rms_block_max', 'rms_particle_only_max']\r\n\r\nexport const optionalField = ['shape', 'particle_area_or_volume', 'fill_factor', 'std', 'rotation', 'num_particles', 'rand_seed', 'num_particles_vor', 'particle_location']\r\nexport const optionalFieldExist = {\r\n    'checker': ['particle_area_or_volume', 'fill_factor', 'shape'],\r\n    'shape': ['particle_area_or_volume', 'rotation', 'num_particles', 'shape', 'particle_location'],\r\n    'effective medium': [],\r\n    'voronoi': ['num_particles_vor', 'rand_seed']\r\n}\r\nexport const optionalIncDecField = ['num_particles']\r\n\r\nexport const fieldNameDescription = {\r\n    'std': {\r\n        'name': 'standard deviation',\r\n        'description': 'size standard deviation of particles'\r\n    }\r\n}\r\n\r\nexport const default_values = [\r\n    // Visualization\r\n    {\r\n        'check': {\r\n            'structure': true,\r\n            'rms': true,\r\n            'view_only_particles': true,\r\n            'log_res': false,\r\n            'video': true,\r\n        },\r\n        'radio': {\r\n        },\r\n        'range': {\r\n        },\r\n        'coord': {\r\n\r\n        },\r\n        'input': {\r\n            'frame_speed': 0.01,\r\n        }\r\n    },\r\n    // General\r\n    {\r\n        'check': {\r\n            gen_vor: false,\r\n        },\r\n        'radio': {\r\n            //  'shape_types_dummy': ('cube', ('sphere', 'triangle', 'hexagon', 'cube'))\r\n        },\r\n        'range': {\r\n\r\n        },\r\n        'input': {\r\n        }\r\n    },\r\n    // Geometry\r\n    {\r\n        'check': {\r\n\r\n        },\r\n        'radio': {\r\n            'shape': ['hexagon', ['sphere', 'triangle', 'hexagon', 'cube']],\r\n            'particle_size_t': ['gaussian', ['fixed', 'gaussian']],\r\n        },\r\n        'coord': {\r\n            'solid_center': [-0.8, 0, 0],\r\n            'solid_size': [4, 4, 4],\r\n            'cell_size': [10, 10, 10],\r\n        },\r\n        'material': {\r\n            'eps': [1, 0, 3.5, 0.027429274, 7, 0.027429274, 10.5, 0.027429274, 5, 0.02],\r\n        },\r\n        'location': {\r\n            'particle_location': [0, -2, 0, 0, 2, 0]\r\n        },\r\n        'material_assign': {\r\n            'section': {\r\n                'shape': [1, 1],\r\n                'checker': [1, 2, 3, 4],\r\n                'effective medium': [1, 2],\r\n                'voronoi': [1, 2, 3, 4],\r\n            },\r\n        },\r\n        'range': {\r\n            'particle_area_or_volume': [1, 2, 1],\r\n            'fill_factor': [0.5, 0.7, 1],\r\n            'std': [0.1, 0.3, 1],\r\n            'rotation': [0, 60, 1]\r\n        },\r\n        'input': {\r\n            'pml_thick': 0.5,\r\n            'num_particles': 2,\r\n            'rand_seed': 15,\r\n            'num_particles_vor': 60,\r\n        }\r\n    },\r\n    // Simulation\r\n    {\r\n        'check': {\r\n            'change_res': false,\r\n        },\r\n        'radio': {\r\n            'sim_types': ['checker', ['checker', 'shape', 'effective medium', 'voronoi']]\r\n        },\r\n        'range': {\r\n\r\n        },\r\n        'input': {\r\n            'dimension': 2,\r\n            'resolution': 20,\r\n            'time': 150,\r\n            'start_factor': 2,\r\n            'out_every': 2,\r\n            'save_every': 30,\r\n\r\n        }\r\n    },\r\n    // Source\r\n    {\r\n        'check': {\r\n        },\r\n        'radio': {\r\n            'mode': ['normal', ['normal', 'gaussian']],\r\n        },\r\n        'coord': {\r\n            'size': [0, 8, 0],\r\n            'center': [4, 0, 0],\r\n        },\r\n        'range': {\r\n        },\r\n        'input': {\r\n            'fcen': 2.35,\r\n            'tilt_angle': 0,\r\n            'sigma': 2,\r\n            'amp': 100,\r\n            'fwidth': 2,\r\n        }\r\n    },\r\n]\r\n","import { makeVar, InMemoryCache, gql } from '@apollo/client';\r\nimport { pics, default_values } from '../default_value';\r\n\r\nexport const cartItemsVar = makeVar([]);\r\nexport const isLoggedIn = makeVar(!!localStorage.getItem('authToken'));\r\nexport const currentSection = makeVar('Source');\r\n\r\nconst freshSimedDict = {}\r\nconst plots = {}\r\nconst pic_page = ['sideview', 'resultview']\r\npic_page.map((pic) => freshSimedDict[pic] = true)\r\npics.map((pic) => plots[pic] = '')\r\n\r\nexport const freshSimed = makeVar(freshSimedDict);\r\nexport const plotDict = makeVar(plots);\r\nexport const rms = makeVar({ 'rms_block': null, 'rms_xy': null, 'rms_max': null });\r\n\r\nexport const configSecName = makeVar('General');\r\nexport const structSecName = makeVar('Geometry');\r\nexport const mainSectionName = makeVar('config');\r\n\r\n\r\nexport const cache = new InMemoryCache({\r\n    typePolicies: {\r\n        Query: {\r\n            fields: {\r\n                isLoggedIn: {\r\n                    read() {\r\n                        return isLoggedIn();\r\n                    }\r\n                },\r\n                cartItems: {\r\n                    read() {\r\n                        return cartItemsVar();\r\n                    }\r\n                },\r\n                currentSection: {\r\n                    read() {\r\n                        return currentSection();\r\n                    }\r\n                },\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport const IS_LOGGED_IN_QUERY = gql`\r\n    query {\r\n        isLoggedIn @client\r\n    }\r\n`;\r\nexport const CURRENT_SECTION_QUERY = gql`\r\n    query {\r\n      currentSection @client\r\n    }\r\n`;\r\nexport const VALUE_QUERY = gql`\r\n    query {\r\n      value @client\r\n    }\r\n`;","import { AppBar, Button, Grid, makeStyles, Toolbar, Typography } from '@material-ui/core'\r\nimport { AccountCircleOutlined } from '@material-ui/icons';\r\nimport React, { useState } from 'react'\r\nimport { Query } from 'react-apollo';\r\nimport { Link } from 'react-router-dom'\r\nimport { GET_SELF_QUERY } from '../App';\r\nimport { sections_name } from '../default_value';\r\nimport clsx from 'clsx';\r\nimport { useReactiveVar } from '@apollo/client';\r\nimport { configSecName, structSecName, mainSectionName } from './cache';\r\n\r\nexport function Navbar(props) {\r\n\r\n    const classes = styles();\r\n    let userSection;\r\n    const configVar = useReactiveVar(configSecName)\r\n\r\n    const mainVar = useReactiveVar(mainSectionName)\r\n    const structVar = useReactiveVar(structSecName)\r\n\r\n    const sections_name_config = ['Visualization', 'General', 'Simulation', 'Geometry', 'Source']\r\n    const sections_name_struct = []\r\n\r\n    userSection = <Query query={GET_SELF_QUERY} fetchPolicy='cache-and-network'>\r\n        {({ error, loading, data }) => {\r\n            if (data) {\r\n                return <Link to={`/profile/${data.userself.id}`} className={classes.grow} style={{ justifyContent: 'flex-end' }}>\r\n                    <AccountCircleOutlined />\r\n                    <Typography variant='h5' noWrap className={classes.username}>\r\n                        {data.userself.username}\r\n                    </Typography>\r\n                    <Button class='btn btn-primary'>\r\n                        Signout\r\n                            </Button>\r\n                </Link>\r\n            } else {\r\n                return <Grid container style={{\r\n                    width: 'auto',\r\n                    display: 'flex',\r\n                    flexDirection: 'row-reverse',\r\n                    flexGrow: 1,\r\n                }}>\r\n                    <Grid item xs>\r\n                        <Link to='/login'>\r\n                            <Button class='btn btn-primary' style={{ marginRight: '1rem' }}>\r\n                                Login\r\n                            </Button>\r\n                        </Link>\r\n                        <Link to='/signup'>\r\n                            <Button class='btn btn-primary'>\r\n                                Signup\r\n                            </Button>\r\n\r\n                        </Link>\r\n                    </Grid>\r\n                </Grid>\r\n            }\r\n        }}\r\n    </Query>\r\n\r\n\r\n    return (\r\n        <AppBar className={classes.root}>\r\n            <Toolbar>\r\n                <Link to='/' className={classes.grow}>\r\n                    <Typography variant='h5' noWrap style={{ color: '#f3f0f1' }}>\r\n                        Microwave simulation\r\n                        </Typography>\r\n                </Link>\r\n\r\n                <Link\r\n                    to={`/`}\r\n                    onClick={(e) => {\r\n                        mainSectionName('config')\r\n                    }}\r\n                    className={clsx(mainVar === 'config' && classes.active, classes.grow)}>\r\n                    <Typography\r\n                        style={{ margin: 'auto', paddingTop: '1.2rem', paddingBottom: '1.2rem', color: '#f3f0f1' }} variant='body1'\r\n                        noWrap>\r\n                        Config Setting\r\n                    </Typography>\r\n                </Link>\r\n                <Link\r\n                    to={`/structure/${structVar}`}\r\n                    onClick={(e) => {\r\n                        mainSectionName('structure');\r\n                    }}\r\n                    className={clsx(mainVar === 'structure' && classes.active, classes.grow)}>\r\n                    <Typography\r\n                        style={{ margin: 'auto', paddingTop: '1.2rem', paddingBottom: '1.2rem', color: '#f3f0f1' }} variant='body1'\r\n                        noWrap>\r\n                        Structure Editor\r\n                    </Typography>\r\n                </Link>\r\n                <Link\r\n                    to={`/resultsexplorer`}\r\n                    onClick={(e) => mainSectionName('result')}\r\n                    className={clsx(mainVar === 'result' && classes.active, classes.grow)}>\r\n                    <Typography\r\n                        style={{ margin: 'auto', paddingTop: '1.2rem', paddingBottom: '1.2rem', color: '#f3f0f1' }} variant='body1'\r\n                        noWrap>\r\n                        Results Explorer\r\n                    </Typography>\r\n                </Link>\r\n                {userSection}\r\n\r\n\r\n            </Toolbar>\r\n            {mainVar === 'config' && <Toolbar style={{\r\n                background: 'lightblue',\r\n                width: '70%',\r\n                minHeight: '37px',\r\n                margin: 'auto',\r\n                borderRadius: '10px',\r\n            }}>\r\n                {sections_name_config.map((name) => {\r\n                    return <Link\r\n                        to={`/config/${name}`}\r\n                        onClick={(e) => {\r\n                            configSecName(name)\r\n                        }}\r\n                        className={clsx(configVar === name && classes.active, classes.grow)}\r\n                        key={name}>\r\n                        <Typography style={{ margin: 'auto', paddingTop: '0.2rem', paddingBottom: '0.2rem' }} variant='body1' color='textSecondary' noWrap>\r\n                            {name}\r\n                        </Typography>\r\n                    </Link>\r\n                })}\r\n            </Toolbar>}\r\n\r\n\r\n            {mainVar === 'structure' && <Toolbar style={{\r\n                background: 'lightblue',\r\n                width: '70%',\r\n                minHeight: '37px',\r\n                margin: 'auto',\r\n                borderRadius: '10px',\r\n            }}>\r\n                {sections_name_struct.map((name) => {\r\n                    return <Link\r\n                        to={`/structure/${name}`}\r\n                        onClick={(e) => {\r\n                            structSecName(name)\r\n                        }}\r\n                        className={clsx(structVar === name && classes.active, classes.grow)}\r\n                        key={name}>\r\n                        <Typography style={{ margin: 'auto', paddingTop: '0.2rem', paddingBottom: '0.2rem' }} variant='body1' color='textSecondary' noWrap>\r\n                            {name}\r\n                        </Typography>\r\n                    </Link>\r\n                })}\r\n            </Toolbar>}\r\n\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nconst styles = makeStyles(theme => ({\r\n    root: {\r\n        position: 'static',\r\n        flexGrow: 1,\r\n        margin: 0,\r\n        padding: 0\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        textDecoration: \"none\"\r\n    },\r\n    logo: {\r\n        marginRight: theme.spacing(1),\r\n        fontSize: 45\r\n    },\r\n    faceIcon: {\r\n        marginRight: theme.spacing(1),\r\n        fontSize: 30,\r\n        color: \"white\"\r\n    },\r\n    username: {\r\n        color: \"white\",\r\n        fontSize: 30\r\n    },\r\n    active: {\r\n        backgroundColor: '#7589f7',\r\n        borderRadius: '8px 8px 0px 0px',\r\n    }\r\n}))\r\n\r\nexport default Navbar\r\n","import React, { useState } from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nconst Error = ({ classes, error }) => {\r\n  const [open, setOpen] = useState(true);\r\n\r\n  return (\r\n    <Snackbar\r\n      open={open}\r\n      className={classes.snackbar}\r\n      message={error.message}\r\n      action={\r\n        <Button onClick={() => setOpen(false)} color=\"secondary\" size=\"small\">\r\n          Close\r\n        </Button>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst styles = theme => ({\r\n  snackbar: {\r\n    margin: theme.spacing(1)\r\n  }\r\n});\r\n\r\nexport default withStyles(styles)(Error);\r\n","import React, { Component, useState } from 'react'\r\nimport { gql } from 'apollo-boost';\r\nimport { Button, FormControl, Grid, Input, InputLabel, Paper, Typography, withStyles } from '@material-ui/core';\r\nimport { Mutation } from 'react-apollo';\r\nimport Error from '../util/Error';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { IS_LOGGED_IN_QUERY } from '../util/cache';\r\n\r\nconst Login = ({ history, classes }) => {\r\n    const [username, setusername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const handleSubmit = async (e, tokenAuth, client) => {\r\n        e.preventDefault();\r\n        try {\r\n            const res = await tokenAuth();\r\n            localStorage.setItem('authToken', res.data.tokenAuth.token)\r\n            client.writeQuery({ query: IS_LOGGED_IN_QUERY, data: { isLoggedIn: true } });\r\n            history.push('/')\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid container direction='row' style={{ justifyContent: 'center' }}>\r\n            <Grid item xs={8} spacing={2}>\r\n                <Mutation\r\n                    mutation={LOGIN_MUTATION}\r\n                    variables={{ username, password }}\r\n                    onError={() => { console.log('error') }}>\r\n                    {(tokenAuth, { loading, error, called, client }) => {\r\n                        return (\r\n                            <form onSubmit={e => handleSubmit(e, tokenAuth, client)}\r\n                                className={classes.form}>\r\n                                <FormControl margin=\"normal\" required fullWidth>\r\n                                    <InputLabel htmlFor=\"username\">username</InputLabel>\r\n                                    <Input\r\n                                        id=\"username\"\r\n                                        onChange={event => setusername(event.target.value)}\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                <FormControl margin=\"normal\" required fullWidth>\r\n                                    <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n                                    <Input\r\n                                        id=\"password\"\r\n                                        type=\"password\"\r\n                                        onChange={event => setPassword(event.target.value)}\r\n                                    />\r\n                                </FormControl>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled={\r\n                                        loading ||\r\n                                        !username.trim() ||\r\n                                        !password.trim()\r\n                                    }\r\n                                    className={classes.submit}\r\n                                >\r\n                                    {loading ? \"loading\" : \"Login\"}\r\n                                </Button>\r\n\r\n\r\n                                {error && <Error error={error} />}\r\n                            </form>\r\n                        )\r\n                    }}\r\n                </Mutation>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n                <Link to='/signup'>\r\n                    <Typography\r\n                        className={classes.account_trans}\r\n                        variant=\"body2\"\r\n                        fullWidth\r\n                    >\r\n                        Don't a account? <a> Signup </a>\r\n                    </Typography>\r\n                </Link>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nconst LOGIN_MUTATION = gql`\r\nmutation ($username: String!, $password: String!){\r\n    tokenAuth(username: $username, password: $password){\r\n        token\r\n    }\r\n}`;\r\n\r\n\r\nconst styles = theme => ({\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    account_trans: {\r\n        textAlign: 'center',\r\n        marginTop: '2rem',\r\n        color: \"black\",\r\n        '&:hover': {\r\n            cursor: 'pointer',\r\n        }\r\n    }\r\n})\r\nexport default withStyles(styles)(Login)\r\n","import React, { Component, useState } from 'react'\r\nimport { gql } from 'apollo-boost';\r\nimport { Button, FormControl, Grid, Input, InputLabel, Paper, Typography, withStyles } from '@material-ui/core';\r\nimport { Mutation } from 'react-apollo';\r\nimport Error from '../util/Error';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { IS_LOGGED_IN_QUERY } from '../util/cache';\r\n\r\nconst Signup = ({ classes }) => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const handleSubmit = async (e, tokenAuth, client) => {\r\n        e.preventDefault();\r\n        try {\r\n            const res = await tokenAuth();\r\n            localStorage.setItem('authToken', res.data.tokenAuth.token)\r\n            client.writeQuery({ query: IS_LOGGED_IN_QUERY, data: { isLoggedIn: true } });\r\n            this.props.history.push('/')\r\n        } catch (e) {\r\n            console.log(e)\r\n            return\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid container direction='row' style={{ justifyContent: 'center' }}>\r\n            <Grid item xs={8} spacing={2}>\r\n                <Mutation\r\n                    mutation={SIGNUP_MUTATION}\r\n                    variables={{ username, email, password }}\r\n                    onError={() => { }}>\r\n                    {(tokenAuth, { loading, error, called, client }) => {\r\n                        return (\r\n                            <>\r\n                                <form onSubmit={e => handleSubmit(e, tokenAuth, client)}\r\n                                    className={classes.form}>\r\n                                    <FormControl margin=\"normal\" required fullWidth>\r\n                                        <InputLabel htmlFor=\"username\">Username</InputLabel>\r\n                                        <Input\r\n                                            id=\"username\"\r\n                                            onChange={event => setUsername(event.target.value)}\r\n                                        />\r\n                                    </FormControl>\r\n                                    <FormControl margin=\"normal\" required fullWidth>\r\n                                        <InputLabel htmlFor=\"email\">email</InputLabel>\r\n                                        <Input\r\n                                            id=\"email\"\r\n                                            onChange={event => setEmail(event.target.value)}\r\n                                        />\r\n                                    </FormControl>\r\n                                    <FormControl margin=\"normal\" required fullWidth>\r\n                                        <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n                                        <Input\r\n                                            id=\"password\"\r\n                                            type=\"password\"\r\n                                            onChange={event => setPassword(event.target.value)}\r\n                                        />\r\n                                    </FormControl>\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        fullWidth\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        disabled={\r\n                                            loading ||\r\n                                            !username.trim() ||\r\n                                            !password.trim()\r\n                                        }\r\n                                        className={classes.submit}\r\n                                    >\r\n                                        {loading ? \"loading\" : \"Signup\"}\r\n                                    </Button>\r\n                                    {error && <Error error={error} />}\r\n                                </form>\r\n                            </>\r\n                        )\r\n                    }}\r\n                </Mutation>\r\n                <Link to='/login'>\r\n                    <Typography\r\n                        className={classes.account_trans}\r\n                        variant=\"body2\"\r\n                        fullWidth\r\n                    >\r\n                        Already have a account? <a> Login </a>\r\n                    </Typography>\r\n                </Link>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nconst SIGNUP_MUTATION = gql`\r\nmutation ($username:String!, $password:String!, $email:String!) {\r\n    createUser(username:$username, password:$password, email:$email) {\r\n        user {\r\n            username\r\n            email\r\n        }\r\n    }\r\n}`;\r\n\r\n\r\nconst styles = theme => ({\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    account_trans: {\r\n        textAlign: 'center',\r\n        marginTop: '2rem',\r\n        color: \"black\",\r\n        '&:hover': {\r\n            cursor: 'pointer',\r\n        }\r\n    }\r\n})\r\nexport default withStyles(styles)(Signup)\r\n","import React, { Component } from 'react'\r\n\r\nexport class Loading extends Component {\r\n    render() {\r\n        if (this.props.navbar) {\r\n            return (\r\n                <div>\r\n                    Loading...\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    Loading...\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Loading\r\n","import { Button } from '@material-ui/core'\r\nimport { DeleteOutline } from '@material-ui/icons'\r\nimport { gql } from 'apollo-boost'\r\nimport Axios from 'axios'\r\nimport React, { Component } from 'react'\r\nimport { Mutation, Query } from 'react-apollo'\r\nimport { GET_TRACKS_QUERY } from '../App'\r\nimport Error from '../util/Error'\r\nimport Loading from '../util/loading'\r\n\r\n\r\nconst DELETE_TRACK_MUTATION = gql`\r\nmutation delete_track ($url: String!) {\r\n  deleteTrack(url:$url) {\r\n    url\r\n  }\r\n}`\r\n\r\n\r\nexport class DeleteTrack extends Component {\r\n\r\n    render() {\r\n\r\n        const handleUpdateCache = (cache, { data: { deleteTrack } }) => {\r\n            const data = cache.readQuery({ query: GET_TRACKS_QUERY })\r\n            const index = data.track.findIndex(\r\n                track => track.url === deleteTrack.url\r\n            )\r\n            // data.track.splice(index, 1)\r\n            const track = [...data.track.slice(0, index), ...data.track.slice(index + 1)];\r\n            cache.writeQuery({ query: GET_TRACKS_QUERY, data: { track } });\r\n        }\r\n\r\n        return (\r\n            <Mutation\r\n                mutation={DELETE_TRACK_MUTATION}\r\n                variables={{ url: this.props.track.url }}\r\n                update={handleUpdateCache}>\r\n                {(delete_track, { loading, error, data }) => {\r\n                    if (error) {\r\n                        return <Error error={error} />\r\n                    }\r\n                    if (!!loading) {\r\n                        return <Loading />\r\n                    }\r\n                    return <Button>\r\n                        <DeleteOutline onClick={() => {\r\n                            Axios.delete('/music/' + this.props.track.url)\r\n                                .catch(e => console.log(e))\r\n                            delete_track()\r\n                        }} />\r\n                    </Button>\r\n                }}\r\n            </Mutation>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DeleteTrack\r\n","import { Box, Card, Grid, Radio, Typography } from '@material-ui/core'\r\nimport { ArrowDropDown, ThumbUp } from '@material-ui/icons'\r\nimport Axios from 'axios';\r\nimport React, { Component } from 'react'\r\nimport ReactPlayer from 'react-player';\r\nimport DeleteTrack from './deleteTrack';\r\n\r\nexport class Track extends Component {\r\n    render() {\r\n        const track = this.props.track;\r\n        return (\r\n            <Grid item xs={12} style={{ margin: 'auto' }}>\r\n                <Card>\r\n                    <Grid container justify='space-evenly' style={{ alignItems: 'center', textAlign: 'center' }}>\r\n                        <Grid item xs={2}>\r\n                            <Radio\r\n                                checked={this.props.configUsed === track.id}\r\n                                onChange={() => this.props.setconfigUsed(track.id)}\r\n                            />\r\n\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            <Typography variant='body1'>\r\n                                {track.id}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            <Typography variant='body1'>\r\n                                {track.title}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            <Typography variant='caption'>\r\n                                {track.description}\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <DeleteTrack track={track} />\r\n\r\n                        </Grid>\r\n\r\n\r\n\r\n                    </Grid>\r\n                </Card>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport class TrackHead extends Component {\r\n    render() {\r\n        return (\r\n            <Grid item xs={12} style={{ margin: 'auto' }}>\r\n                <Card>\r\n                    <Grid container justify='space-evenly' style={{ alignItems: 'center', textAlign: 'center' }}>\r\n                        <Grid item xs={2}>\r\n                            <Typography variant='body1'>\r\n                                Select\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Typography variant='body1'>\r\n                                ID\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            <Typography variant='body1'>\r\n                                Title\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            <Typography variant='body1'>\r\n                                Description\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Typography variant='body1'>\r\n                                Delete\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n\r\n                    </Grid>\r\n                </Card>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Track\r\n","import { Button, Grid, Typography } from '@material-ui/core';\r\nimport { AccountCircleOutlined } from '@material-ui/icons';\r\nimport React, { Component } from 'react'\r\nimport { Query } from 'react-apollo';\r\nimport { GET_USER_QUERY } from '../App';\r\nimport Track from '../tracks/readTrack';\r\nimport Error from '../util/Error';\r\nimport Loading from '../util/loading';\r\n\r\nexport const Profile = (props, classes) => {\r\n    let id = props.match.params.id;\r\n    return (\r\n        <Query query={GET_USER_QUERY} variables={{ id: id }}>\r\n            {({ loading, error, data }) => {\r\n                if (!!loading) {\r\n                    return <Loading />\r\n                }\r\n                if (error) {\r\n                    return <Error error={error} />\r\n                }\r\n                return <Grid container style={{ display: 'flex' }}>\r\n                    <AccountCircleOutlined color='primary' />\r\n                    <Grid item>\r\n                        <Typography variant='body1'>\r\n                            {data.user.username}\r\n                        </Typography>\r\n                        <Typography variant='caption'>\r\n                            {data.user.email}\r\n                        </Typography>\r\n                    </Grid>\r\n                    {data.user.musicSet.map((track) => {\r\n                        return <Track track={track} />\r\n                    })}\r\n                    <Button class='btn btn-danger'>\r\n                        Signout\r\n                    </Button>\r\n                </Grid>\r\n            }}\r\n        </Query >\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React, { createContext } from \"react\";\r\n\r\nconst secContext = createContext({\r\n    name: null,\r\n    changeName: null\r\n});\r\n\r\nexport default secContext;","import React, { Component } from 'react'\r\n\r\nexport class searchBar extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default searchBar\r\n","import axios from 'axios';\r\nimport { pics, plots } from '../../default_value';\r\nimport Axios from 'axios';\r\n\r\nexport const getPlots = (callback) => (dispatch) => {\r\n    pics.map((pic) => {\r\n        Axios.get('/plot/' + pic)\r\n            .then((plotHtml) => {\r\n                dispatch({\r\n                    type: 'SET_PICS',\r\n                    payload: [pic, plotHtml.data]\r\n                })\r\n                callback(plotHtml.data)\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    })\r\n    plots.map((plot) => {\r\n        Axios.get('/plot/' + plot)\r\n            .then((plotHtml) => {\r\n                dispatch({\r\n                    type: 'SET_PLOTS',\r\n                    payload: [plot, plotHtml.data]\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    })\r\n};\r\n\r\nexport const setSlider = (plot, value) => (dispatch) => {\r\n    dispatch({\r\n        type: 'SET_SLIDER',\r\n        payload: [plot, value]\r\n    })\r\n}\r\n\r\nexport const setConfig = (index, cat, field, value) => (dispatch) => {\r\n    dispatch({\r\n        type: 'SET_CONFIG',\r\n        payload: [index, cat, field, value]\r\n    })\r\n}\r\n\r\nexport const setAllConfig = (config) => (dispatch) => {\r\n    dispatch({\r\n        type: 'SET_CONFIG',\r\n        payload: config\r\n    })\r\n}","import { Radio, Typography } from '@material-ui/core';\r\nimport React, { Fragment, useState } from 'react'\r\nimport { currentSection } from '../util/cache';\r\nimport { optionalField, optionalFieldExist, sections_name } from '../default_value';\r\nimport { useReactiveVar } from '@apollo/client';\r\nimport { configSecName, structSecName, mainSectionName } from '../util/cache';\r\nimport { connect } from 'react-redux';\r\nimport { setConfig } from '../redux/action/dataActions';\r\n\r\n\r\n\r\nlet RadioFieldUnconnect = (props) => {\r\n    const [name, [defaultValue, choices]] = props.value\r\n    const configVar = useReactiveVar(configSecName)\r\n    const indexSec = sections_name.indexOf(configVar);\r\n    const input = props.data.configValues[indexSec][props.cat][props.field];\r\n\r\n    return <div className=\"container\">\r\n        <div className='row'>\r\n            <Typography variant='body1' style={{ margin: 'auto' }} style={{\r\n                background: 'lightblue',\r\n                marginBottom: '2px'\r\n            }}>\r\n                {name.replaceAll('_', ' ')}\r\n            </Typography>\r\n        </div>\r\n        <div className='row' style={{ alignItems: 'center' }}>\r\n            {choices.map((choice) => {\r\n                return <Fragment key={choice}>\r\n                    <div className=\"col-3\">\r\n                        <Typography variant='body1'>\r\n                            {choice}\r\n                        </Typography>\r\n                    </div>\r\n                    <div className=\"col-3\" style={{ justifyContent: 'flex-end', display: 'flex' }}>\r\n                        <Radio\r\n                            checked={input[0] === choice}\r\n                            onChange={() => {\r\n                                let newInput = [...input];\r\n                                newInput[0] = choice;\r\n                                props.setConfig(indexSec, props.cat, props.field, newInput);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </Fragment>\r\n            })}\r\n        </div>\r\n    </div>\r\n};\r\n\r\nconst mapActiontoProps = {\r\n    setConfig,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data,\r\n});\r\n\r\nlet RadioField = connect(mapStateToProps, mapActiontoProps)(RadioFieldUnconnect)\r\n\r\nlet RadioFields = (props) => {\r\n\r\n    return Object.entries(props.values).map((value) => {\r\n        const index = sections_name.indexOf('Simulation');\r\n        const sim_types = props.data.configValues[index]['radio']['sim_types'][0]\r\n        const sim_types_fields = optionalFieldExist[sim_types]\r\n        if (!optionalField.includes(value[0]) || (optionalField.includes(value[0]) && sim_types_fields.includes(value[0])))\r\n            return <RadioField cat={props.cat} field={value[0]} value={value} key={value[0]} />\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActiontoProps)(RadioFields);","import { TextField, Typography } from '@material-ui/core';\r\nimport React, { useState } from 'react'\r\nimport { useReactiveVar } from '@apollo/client';\r\nimport { currentSection } from '../util/cache';\r\nimport { optionalField, optionalFieldExist, sections_name } from '../default_value';\r\nimport { configSecName, structSecName, mainSectionName } from '../util/cache';\r\nimport { connect } from 'react-redux';\r\nimport { setConfig } from '../redux/action/dataActions';\r\n\r\n\r\nlet RangeFieldUnconnect = (props) => {\r\n    const configVar = useReactiveVar(configSecName)\r\n    const indexSec = sections_name.indexOf(configVar);\r\n    const [name, defaultValue] = props.value;\r\n\r\n    const input = props.data.configValues[indexSec][props.cat][props.field];\r\n\r\n\r\n    const [error, seterror] = useState({})\r\n\r\n    const handleChange = (event, id) => {\r\n        let newInput = [...input];\r\n        newInput[id] = event.target.value;\r\n        if (isNaN(newInput[id])) {\r\n            seterror({ ...error, [id]: 'Must be number' })\r\n        } else {\r\n            let newError = { ...error };\r\n            delete newError[id]\r\n            seterror(newError)\r\n        }\r\n        props.setConfig(indexSec, props.cat, props.field, newInput);\r\n    }\r\n\r\n    return <div className=\"container\" name={name} style={{ textAlign: 'center' }}>\r\n        <div className='row' style={{ alignItems: 'center' }}>\r\n            <div className=\"col-3\">\r\n                <Typography variant='body1' style={{\r\n                    background: 'lightblue',\r\n                    marginBottom: '2px'\r\n                }}>\r\n                    {name.replaceAll('_', ' ')}\r\n                </Typography>\r\n            </div>\r\n            <div className=\"col-3\">\r\n                <TextField\r\n                    value={input[0]}\r\n                    error={Object.keys(error).length > 0}\r\n                    helperText={error[0]}\r\n                    onChange={(event) => handleChange(event, 0)}\r\n                    style={{ marginBottom: '1rem' }}\r\n                />\r\n            </div>\r\n            <div className=\"col-3\">\r\n                <TextField\r\n                    value={input[1]}\r\n                    error={Object.keys(error).length > 0}\r\n                    helperText={error[1]}\r\n                    onChange={(event) => handleChange(event, 1)}\r\n                    style={{ marginBottom: '1rem' }}\r\n                />\r\n            </div>\r\n            <div className=\"col-3\">\r\n                <TextField\r\n                    value={input[2]}\r\n                    error={Object.keys(error).length > 0}\r\n                    helperText={error[2]}\r\n                    onChange={(event) => handleChange(event, 2)}\r\n                    style={{ marginBottom: '1rem' }}\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nconst mapActiontoProps = {\r\n    setConfig,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data,\r\n});\r\n\r\nlet RangeField = connect(mapStateToProps, mapActiontoProps)(RangeFieldUnconnect)\r\n\r\nlet RangeFields = (props) => {\r\n\r\n    const index = sections_name.indexOf('Simulation');\r\n    const sim_types = props.data.configValues[index]['radio']['sim_types'][0]\r\n    const sim_types_fields = optionalFieldExist[sim_types]\r\n    return Object.entries(props.values).map((value) => {\r\n        if (!optionalField.includes(value[0]) || (optionalField.includes(value[0]) && sim_types_fields.includes(value[0])))\r\n            return <RangeField cat={props.cat} field={value[0]} value={value} key={value[0]} />\r\n    })\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapActiontoProps)(RangeFields);","import { TextField, Typography, Button } from '@material-ui/core';\r\nimport React, { useState } from 'react'\r\nimport { useReactiveVar } from '@apollo/client';\r\nimport { sections_name } from '../default_value';\r\nimport { configSecName, structSecName, mainSectionName } from '../util/cache';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport { connect } from 'react-redux';\r\nimport { setConfig } from '../redux/action/dataActions';\r\n\r\n\r\nlet IncDecFieldUnconnect = (props) => {\r\n    const configVar = useReactiveVar(configSecName)\r\n\r\n    const [name, defaultValue] = props.value;\r\n\r\n    const indexSec = sections_name.indexOf(configVar);\r\n\r\n    const input = props.data.configValues[indexSec][props.cat][props.field];\r\n    const [error, seterror] = useState({})\r\n\r\n    const handleChange = (event, id) => {\r\n        if (isNaN(event.target.value)) {\r\n            seterror({ ...error, [id]: 'Must be number' })\r\n        } else {\r\n            let newError = { ...error };\r\n            delete newError[id]\r\n            seterror(newError)\r\n        }\r\n        props.setConfig(indexSec, props.cat, props.field, parseFloat(event.target.value));\r\n    }\r\n\r\n    return <div className=\"container\" name={name} style={{ textAlign: 'center' }}>\r\n        <div className='row'>\r\n            <div className=\"col-3\">\r\n                <Typography variant='body1' style={{\r\n                    background: 'lightblue',\r\n                    marginBottom: '2px'\r\n                }}>\r\n                    {name.replaceAll('_', ' ')}\r\n                </Typography>\r\n            </div>\r\n            <div className=\"col-3\">\r\n                <Button onClick={(event) => {\r\n                    const i = parseFloat(input)\r\n                    if (i - 1 >= 0) props.setConfig(indexSec, props.cat, props.field, parseFloat(input) - 1)\r\n                }} variant=\"contained\" color=\"primary\">\r\n                    <RemoveIcon />\r\n                </Button>\r\n            </div>\r\n            <div className=\"col-3\">\r\n                <TextField\r\n                    value={input}\r\n                    inputProps={{ min: 0, style: { textAlign: 'center' } }}\r\n                    error={Object.keys(error).length > 0}\r\n                    helperText={error[0]}\r\n                    onChange={(event) => handleChange(event, 0)}\r\n                    style={{ marginBottom: '1rem' }}\r\n                />\r\n            </div>\r\n            <div className=\"col-3\">\r\n                <Button onClick={(event) => {\r\n                    props.setConfig(indexSec, props.cat, props.field, parseFloat(input) + 1);\r\n                }} variant=\"contained\" color=\"primary\">\r\n                    <AddIcon />\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst mapActiontoProps = {\r\n    setConfig,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data,\r\n});\r\n\r\nlet IncDecField = connect(mapStateToProps, mapActiontoProps)(IncDecFieldUnconnect)\r\n\r\nexport default IncDecField;","import { TextField, Typography } from '@material-ui/core';\r\nimport React, { useState } from 'react'\r\nimport { useReactiveVar } from '@apollo/client';\r\nimport { currentSection } from '../util/cache';\r\nimport { optionalField, optionalFieldExist, optionalIncDecField, sections_name } from '../default_value';\r\nimport { configSecName, structSecName, mainSectionName } from '../util/cache';\r\nimport IncDecField from './incDecField';\r\nimport { connect } from 'react-redux';\r\nimport { setConfig } from '../redux/action/dataActions';\r\n\r\n\r\nlet InputFieldUnconnect = (props) => {\r\n    const configVar = useReactiveVar(configSecName)\r\n\r\n    const [name, defaultValue] = props.value;\r\n\r\n    const indexSec = sections_name.indexOf(configVar);\r\n\r\n    const input = props.data.configValues[indexSec][props.cat][props.field];\r\n    const [error, seterror] = useState({})\r\n\r\n    const handleChange = (event, id) => {\r\n        if (isNaN(event.target.value)) {\r\n            seterror({ ...error, [id]: 'Must be number' })\r\n        } else {\r\n            let newError = { ...error };\r\n            delete newError[id]\r\n            seterror(newError)\r\n        }\r\n        props.setConfig(indexSec, props.cat, props.field, event.target.value);\r\n\r\n    }\r\n\r\n    return <div className=\"container\" name={name} style={{ textAlign: 'center' }}>\r\n        <div className='row'>\r\n            <div className=\"col-3\">\r\n                <Typography variant='body1' style={{\r\n                    background: 'lightblue',\r\n                    marginBottom: '2px'\r\n                }}>\r\n                    {name.replaceAll('_', ' ')}\r\n                </Typography>\r\n            </div>\r\n            <div className=\"col-3\">\r\n                <TextField\r\n                    value={input}\r\n                    error={Object.keys(error).length > 0}\r\n                    helperText={error[0]}\r\n                    onChange={(event) => handleChange(event, 0)}\r\n                    style={{ marginBottom: '1rem' }}\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nconst mapActiontoProps = {\r\n    setConfig,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data,\r\n});\r\n\r\nlet InputField = connect(mapStateToProps, mapActiontoProps)(InputFieldUnconnect)\r\n\r\n\r\nlet InputFields = (props) => {\r\n\r\n    const index = sections_name.indexOf('Simulation');\r\n    const sim_types = props.data.configValues[index]['radio']['sim_types'][0]\r\n    const sim_types_fields = optionalFieldExist[sim_types]\r\n    return Object.entries(props.values).map((value) => {\r\n        if (!optionalField.includes(value[0]) || (optionalField.includes(value[0]) && sim_types_fields.includes(value[0]))) {\r\n            if (optionalIncDecField.includes(value[0])) {\r\n                return <IncDecField cat={props.cat} field={value[0]} value={value} key={value[0]} />\r\n            }\r\n            else {\r\n                return <InputField cat={props.cat} field={value[0]} value={value} key={value[0]} />\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActiontoProps)(InputFields);","import { Checkbox, Typography } from '@material-ui/core';\r\nimport React, { } from 'react'\r\nimport { currentSection } from '../util/cache';\r\nimport { optionalField, optionalFieldExist, sections_name } from '../default_value';\r\nimport { useReactiveVar } from '@apollo/client';\r\nimport { configSecName, structSecName, mainSectionName } from '../util/cache';\r\nimport { connect } from 'react-redux';\r\nimport { setConfig } from '../redux/action/dataActions';\r\n\r\n\r\nlet CheckFieldUnconnect = (props) => {\r\n    const configVar = useReactiveVar(configSecName)\r\n\r\n    const [name, defaultValue] = props.value;\r\n\r\n    const indexSec = sections_name.indexOf(configVar);\r\n\r\n    const input = props.data.configValues[indexSec][props.cat][props.field];\r\n\r\n    const handleChange = (event) => {\r\n        props.setConfig(indexSec, props.cat, props.field, event.target.checked);\r\n    };\r\n\r\n    return <div className=\"col-12\" name={name} style={{ textAlign: 'center' }}>\r\n        <div className='row'>\r\n            <div className=\"col-3\">\r\n                <Typography variant='body1' style={{\r\n                    background: 'lightblue',\r\n                    marginBottom: '2px'\r\n                }}>\r\n                    {name.replaceAll('_', ' ')}\r\n                </Typography>\r\n            </div>\r\n            <div className=\"col-4 offset-5\" style={{ justifyContent: 'flex-end', display: 'flex' }}>\r\n                <Checkbox\r\n                    checked={input}\r\n                    onChange={handleChange}\r\n                    color=\"primary\"\r\n                    inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nconst mapActiontoProps = {\r\n    setConfig,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data,\r\n});\r\n\r\nlet CheckField = connect(mapStateToProps, mapActiontoProps)(CheckFieldUnconnect)\r\n\r\n\r\nlet CheckFields = (props) => {\r\n\r\n    return Object.entries(props.values).map((value) => {\r\n\r\n        const index = sections_name.indexOf('Simulation');\r\n        const sim_types = props.data.configValues[index]['radio']['sim_types'][0]\r\n        const sim_types_fields = optionalFieldExist[sim_types]\r\n        if (!optionalField.includes(value[0]) || (optionalField.includes(value[0]) && sim_types_fields.includes(value[0])))\r\n            return <CheckField cat={props.cat} field={value[0]} value={value} key={value[0]} />\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActiontoProps)(CheckFields)\r\n","import { TextField, Typography } from '@material-ui/core';\r\nimport React, { useState } from 'react'\r\nimport { useReactiveVar } from '@apollo/client';\r\nimport { currentSection } from '../util/cache';\r\nimport { optionalField, optionalFieldExist, sections_name } from '../default_value';\r\nimport { configSecName, structSecName, mainSectionName } from '../util/cache';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { AppBar, Grid, Tooltip } from \"@material-ui/core\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport { connect } from 'react-redux';\r\nimport { setConfig } from '../redux/action/dataActions';\r\n\r\n\r\nlet MaterialFieldUnconnect = (props) => {\r\n    const configVar = useReactiveVar(configSecName)\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [name, defaultValue] = props.value;\r\n\r\n    const indexSec = sections_name.indexOf(configVar);\r\n\r\n    const input = props.data.configValues[indexSec][props.cat][props.field];\r\n\r\n    const [error, seterror] = useState({})\r\n    const [addValue, setaddValue] = useState([1, 0])\r\n\r\n    const handleChange = (event, id) => {\r\n        let newInput = [...input];\r\n        newInput[id] = event.target.value;\r\n        if (isNaN(newInput[id])) {\r\n            seterror({ ...error, [id]: 'Must be number' })\r\n        } else {\r\n            let newError = { ...error };\r\n            delete newError[id]\r\n            seterror(newError)\r\n        }\r\n        props.setConfig(indexSec, props.cat, props.field, newInput);\r\n    }\r\n    const add_mat = (event) => {\r\n        event.preventDefault()\r\n        let newInput = [...input];\r\n        newInput.push(addValue[0])\r\n        newInput.push(addValue[1])\r\n        props.setConfig(indexSec, props.cat, props.field, newInput);\r\n    }\r\n    const remove_mat = (event, id) => {\r\n        event.preventDefault()\r\n        let newInput = [...input];\r\n        newInput.splice(id, 2)\r\n        props.setConfig(indexSec, props.cat, props.field, newInput);\r\n    }\r\n\r\n    return <> {input.map((value, i) => {\r\n        return i % 2 ? null : <div className=\"container\" name={name} style={{ textAlign: 'center' }} key={i}>\r\n            <div className='row' style={{ alignItems: 'center' }}>\r\n                <div className=\"col-3\">\r\n                    <Typography variant='body1' style={{\r\n                        background: 'lightblue',\r\n                        marginBottom: '2px'\r\n                    }}>\r\n                        {i === 0 ? 'Background' : name.replace('_', ' ') + ' ' + String(i / 2)}\r\n                    </Typography>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                    <TextField\r\n                        value={input[i]}\r\n                        error={Object.keys(error).length > 0}\r\n                        helperText={error[0]}\r\n                        onChange={(event) => handleChange(event, i)}\r\n                        style={{ marginBottom: '1rem' }}\r\n                    />\r\n                </div>\r\n                <div className=\"col-3\">\r\n                    <TextField\r\n                        value={input[i + 1]}\r\n                        error={Object.keys(error).length > 0}\r\n                        helperText={error[1]}\r\n                        onChange={(event) => handleChange(event, i + 1)}\r\n                        style={{ marginBottom: '1rem' }}\r\n                    />\r\n                </div>\r\n                {i !== 0 && <div className=\"col-3\">\r\n                    <Tooltip title=\"Remove materials\" placement=\"top\">\r\n                        <Button onClick={(event) => remove_mat(event, i)} variant=\"contained\" color=\"secondary\">\r\n                            <RemoveIcon />\r\n                        </Button>\r\n                    </Tooltip>\r\n                </div>}\r\n            </div>\r\n        </div>\r\n    })}\r\n        <div className=\"container\" name={name} style={{ textAlign: 'center' }}>\r\n            <div className='row' style={{ alignItems: 'center' }}>\r\n                <div className=\"col-3\">\r\n                    <Typography variant='body1' style={{\r\n                        color: 'rgba(0, 0, 0, 0.5)'\r\n                    }}>\r\n                        New material\r\n                    </Typography>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                    <TextField\r\n                        value={addValue[0]}\r\n                        error={Object.keys(error).length > 0}\r\n                        helperText={error[0]}\r\n                        onChange={(event) => {\r\n                            setaddValue([event.target.value, addValue[1]])\r\n                        }}\r\n                        style={{ marginBottom: '1rem', opacity: 0.5 }}\r\n                    />\r\n                </div>\r\n                <div className=\"col-3\">\r\n                    <TextField\r\n                        value={addValue[1]}\r\n                        error={Object.keys(error).length > 0}\r\n                        helperText={error[1]}\r\n                        onChange={(event) => {\r\n                            setaddValue([addValue[0], event.target.value])\r\n                        }}\r\n                        style={{ marginBottom: '1rem', opacity: 0.5 }}\r\n                    />\r\n                </div> <div className=\"col-3\">\r\n                    <Tooltip title=\"Add new materials\" placement=\"top\">\r\n                        <Button onClick={(event) => add_mat(event)} variant=\"contained\" color=\"secondary\">\r\n                            <AddIcon />\r\n                        </Button>\r\n                    </Tooltip>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n}\r\n\r\nconst mapActiontoProps = {\r\n    setConfig,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data,\r\n});\r\n\r\nlet MaterialField = connect(mapStateToProps, mapActiontoProps)(MaterialFieldUnconnect)\r\n\r\nlet MaterialFields = (props) => {\r\n\r\n    const index = sections_name.indexOf('Simulation');\r\n    const sim_types = props.data.configValues[index]['radio']['sim_types'][0]\r\n    const sim_types_fields = optionalFieldExist[sim_types]\r\n    return Object.entries(props.values).map((value) => {\r\n        if (!optionalField.includes(value[0]) || (optionalField.includes(value[0]) && sim_types_fields.includes(value[0])))\r\n            return <MaterialField cat={props.cat} field={value[0]} value={value} key={value[0]} />\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActiontoProps)(MaterialFields)\r\n","import { Typography, Button } from '@material-ui/core';\r\nimport React, { useState } from 'react'\r\nimport { useReactiveVar } from '@apollo/client';\r\nimport { optionalField, optionalFieldExist, sections_name } from '../default_value';\r\nimport { configSecName, structSecName, mainSectionName } from '../util/cache';\r\nimport Select from '@material-ui/core/Select';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\n\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport { setConfig } from '../redux/action/dataActions';\r\n\r\nlet AssignFieldUnconnect = (props) => {\r\n    const configVar = useReactiveVar(configSecName)\r\n\r\n    let index = sections_name.indexOf('Simulation');\r\n    const sim_types = props.data.configValues[index]['radio']['sim_types'][0]\r\n\r\n    const [name, defaultValue] = props.field;\r\n\r\n    const indexSec = sections_name.indexOf(configVar);\r\n\r\n    const input = props.data.configValues[indexSec][props.cat][props.field];\r\n    const inputSimType = input[sim_types];\r\n\r\n    const indexGeo = sections_name.indexOf('Geometry');\r\n    const eps = props.data.configValues[indexGeo]['material']['eps']\r\n\r\n    const [error, seterror] = useState({})\r\n\r\n    const handleChange = (event, id) => {\r\n        let newInputSimType = [...inputSimType];\r\n        newInputSimType[id] = event.target.value;\r\n        if (isNaN(newInputSimType[id])) {\r\n            seterror({ ...error, [id]: 'Must be number' })\r\n        } else {\r\n            let newError = { ...error };\r\n            delete newError[id]\r\n            seterror(newError)\r\n        }\r\n        let newInput = { ...input }\r\n        newInput[sim_types] = newInputSimType;\r\n        props.setConfig(indexSec, props.cat, props.field, newInput);\r\n    }\r\n\r\n    if (sim_types === 'shape') {\r\n        index = sections_name.indexOf('Geometry');\r\n        const num_particles = props.data.configValues[index]['input']['num_particles']\r\n        let newInputSimType = [...inputSimType];\r\n\r\n        const current_particle = newInputSimType.length\r\n        if (current_particle > num_particles) {\r\n            newInputSimType.splice(num_particles)\r\n            let newInput = { ...input }\r\n            newInput[sim_types] = newInputSimType;\r\n            props.setConfig(indexSec, props.cat, props.field, newInput);\r\n        } else if (current_particle < num_particles) {\r\n            for (var i = 0; i < num_particles - current_particle; i++) {\r\n                newInputSimType.push(1)\r\n            }\r\n            let newInput = { ...input }\r\n            newInput[sim_types] = newInputSimType;\r\n            props.setConfig(indexSec, props.cat, props.field, newInput);\r\n        }\r\n    }\r\n    let material_name = ''\r\n    const inputMap = inputSimType.map((value, i) => {\r\n        if (['checker'].includes(sim_types)) {\r\n            if (i === 0) material_name = 'Matrix'\r\n            else material_name = name.replace('_', ' ') + ' ' + String(Math.round(i))\r\n        } else {\r\n            material_name = name.replace('_', ' ') + ' ' + String(Math.round(i))\r\n        }\r\n        return <div key={i} className=\"container\" name={name} style={{ textAlign: 'center' }}>\r\n            <div className='row' style={{ alignItems: 'center', margin: '5px' }}>\r\n                <div className=\"col-6\">\r\n                    <Typography variant='body1' style={{\r\n                        background: 'lightblue',\r\n                        marginBottom: '2px'\r\n                    }}>\r\n                        {material_name}\r\n                    </Typography>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <Select\r\n                        value={value}\r\n                        onChange={(event) => {\r\n                            handleChange(event, i)\r\n                        }}\r\n                        displayEmpty\r\n                        inputProps={{ 'aria-label': 'Without label' }}\r\n                        style={{\r\n                            width: '100%'\r\n                        }}\r\n                    >\r\n                        {eps.map((eps_one, j) => {\r\n                            return j % 2 || j === 0 && !isNaN(eps[j]) && !isNaN(eps[j + 1]) ? null : <MenuItem key={Math.round(j / 2)} value={Math.round(j / 2)}>{String(parseFloat(eps[j]).toFixed(4)) + ' + ' + String(parseFloat(eps[j + 1]).toFixed(4)) + 'i'}</MenuItem>\r\n                        })}\r\n                    </Select>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    })\r\n    return <>\r\n        {inputMap}\r\n\r\n        {['checker', 'voronoi'].includes(sim_types) && <div className='row'>\r\n            <div className=\"col-6\" style={{ justifyContent: 'center', display: 'flex' }}>\r\n                <Button onClick={(event) => {\r\n                    const len = inputSimType.length\r\n                    if (len > 2) {\r\n                        let newInputSimType = [...inputSimType];\r\n                        newInputSimType.pop()\r\n                        let newInput = { ...input }\r\n                        newInput[sim_types] = newInputSimType;\r\n                        props.setConfig(indexSec, props.cat, props.field, newInput);\r\n                    }\r\n                }} variant=\"contained\" color=\"primary\">\r\n                    <RemoveIcon />\r\n                </Button>\r\n            </div>\r\n            <div className=\"col-6\" style={{ justifyContent: 'center', display: 'flex' }}>\r\n                <Button onClick={(event) => {\r\n                    let newInputSimType = [...inputSimType];\r\n                    newInputSimType.push(1)\r\n                    let newInput = { ...input }\r\n                    newInput[sim_types] = newInputSimType;\r\n                    props.setConfig(indexSec, props.cat, props.field, newInput);\r\n                }} variant=\"contained\" color=\"primary\">\r\n                    <AddIcon />\r\n                </Button>\r\n            </div>\r\n        </div>}\r\n    </>\r\n}\r\n\r\n\r\n\r\nconst mapActiontoProps = {\r\n    setConfig,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data,\r\n});\r\n\r\nlet AssignField = connect(mapStateToProps, mapActiontoProps)(AssignFieldUnconnect)\r\n\r\n\r\nlet AssignFields = (props) => {\r\n\r\n    const index = sections_name.indexOf('Simulation');\r\n    const sim_types = props.data.configValues[index]['radio']['sim_types'][0]\r\n    const sim_types_fields = optionalFieldExist[sim_types]\r\n    return Object.entries(props.values).map((value) => {\r\n        if (!optionalField.includes(value[0]) || (optionalField.includes(value[0]) && sim_types_fields.includes(value[0])))\r\n            return <AssignField cat={props.cat} field={value[0]} value={value} key={value[0]} />\r\n    })\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapActiontoProps)(AssignFields)","import React from 'react'\r\nimport { Paper, Typography } from '@material-ui/core';\r\nexport const headers = {\r\n    range: <div className='container' style={{ textAlign: 'center' }}>\r\n        <div className='row'>\r\n            <div className='col-3'>\r\n                <Typography variant='h5'>Param</Typography>\r\n            </div>\r\n\r\n            <div className='col-3'>\r\n                <Typography variant='h5'>Start</Typography>\r\n            </div>\r\n\r\n            <div className='col-3'>\r\n                <Typography variant='h5'>End</Typography>\r\n            </div>\r\n\r\n            <div className='col-3'>\r\n                <Typography variant='h5'>Steps</Typography>\r\n            </div>\r\n        </div>\r\n    </div>,\r\n    coord: <div className='container' style={{ textAlign: 'center' }}>\r\n        <div className='row'>\r\n            <div className='col-3'>\r\n                <Typography variant='h5'>Coordinate</Typography>\r\n            </div>\r\n\r\n            <div className='col-3'>\r\n                <Typography variant='h5'>x</Typography>\r\n            </div>\r\n\r\n            <div className='col-3'>\r\n                <Typography variant='h5'>y</Typography>\r\n            </div>\r\n\r\n            <div className='col-3'>\r\n                <Typography variant='h5'>z</Typography>\r\n            </div>\r\n        </div>\r\n    </div>,\r\n    material: <div className='container' style={{ textAlign: 'center' }}>\r\n        <div className='row'>\r\n            <div className='col-3'>\r\n                <Typography variant='h5'>eps value</Typography>\r\n            </div>\r\n\r\n            <div className='col-3'>\r\n                <Typography variant='h5'>eps</Typography>\r\n            </div>\r\n\r\n            <div className='col-3'>\r\n                <Typography variant='h5'>eps_i</Typography>\r\n            </div>\r\n        </div>\r\n    </div>,\r\n    location: <div className='container' style={{ textAlign: 'center' }}>\r\n        <div className='row'>\r\n            <div className='col-3'>\r\n                <Typography variant='h5'>Location</Typography>\r\n            </div>\r\n\r\n            <div className='col-3'>\r\n                <Typography variant='h5'>X</Typography>\r\n            </div>\r\n            <div className='col-3'>\r\n                <Typography variant='h5'>Y</Typography>\r\n            </div>\r\n            <div className='col-3'>\r\n                <Typography variant='h5'>Z</Typography>\r\n            </div>\r\n        </div>\r\n    </div>,\r\n    material_assign: <div className='container' style={{ textAlign: 'center' }}>\r\n        <div className='row'>\r\n            <div className='col-6'>\r\n                <Typography variant='h5'>Component</Typography>\r\n            </div>\r\n\r\n            <div className='col-6'>\r\n                <Typography variant='h5'>Material Index</Typography>\r\n            </div>\r\n\r\n        </div>\r\n    </div>,\r\n    input: <div className='container' style={{ textAlign: 'center' }}>\r\n        <div className='row'>\r\n            <div className='col-3'><Typography variant='h5'>Param</Typography></div>\r\n            < div className='col-3' > <Typography variant='h5'>Value</Typography></div >\r\n        </div >\r\n    </div>,\r\n    checkbox: <div className=\"row\" style={{ textAlign: 'center' }}>\r\n        <div className='col-3'>\r\n            <Typography variant='h5'>Checkbox</Typography>\r\n        </div>\r\n    </div>,\r\n    radio: <div className=\"row\" style={{ textAlign: 'center' }}>\r\n        <div className='col-3'>\r\n            <Typography variant='h5'>Radio</Typography>\r\n        </div>\r\n    </div>\r\n}\r\n","import { TextField, Typography } from '@material-ui/core';\r\nimport React, { useState } from 'react'\r\nimport { useReactiveVar } from '@apollo/client';\r\nimport { currentSection } from '../util/cache';\r\nimport { optionalField, optionalFieldExist, sections_name } from '../default_value';\r\nimport { configSecName } from '../util/cache';\r\nimport { connect } from 'react-redux';\r\nimport { setConfig } from '../redux/action/dataActions';\r\n\r\n\r\nlet LocationFieldUnconnect = (props) => {\r\n    const configVar = useReactiveVar(configSecName)\r\n    const [name, defaultValue] = props.value;\r\n\r\n    const indexSec = sections_name.indexOf(configVar);\r\n\r\n    const input = props.data.configValues[indexSec][props.cat][props.field];\r\n\r\n    let index = sections_name.indexOf('Simulation');\r\n    const sim_types = props.data.configValues[index]['radio']['sim_types'][0]\r\n\r\n    const [error, seterror] = useState({})\r\n\r\n    const handleChange = (event, id) => {\r\n        let newInput = [...input];\r\n        newInput[id] = event.target.value;\r\n        if (isNaN(newInput[id])) {\r\n            seterror({ ...error, [id]: 'Must be number' })\r\n        } else {\r\n            let newError = { ...error };\r\n            delete newError[id]\r\n            seterror(newError)\r\n        }\r\n        props.setConfig(indexSec, props.cat, props.field, newInput);\r\n    }\r\n\r\n    if (sim_types === 'shape') {\r\n        index = sections_name.indexOf('Geometry');\r\n        const num_particles = props.data.configValues[index]['input']['num_particles'] * 3\r\n        let newInput = [...input];\r\n        const current_particle = newInput.length\r\n        if (current_particle > num_particles) {\r\n            newInput.splice(num_particles)\r\n            props.setConfig(indexSec, props.cat, props.field, newInput);\r\n        } else if (current_particle < num_particles) {\r\n            for (var i = 0; i < num_particles - current_particle; i++) {\r\n                newInput.push(0)\r\n            }\r\n            props.setConfig(indexSec, props.cat, props.field, newInput);\r\n        }\r\n    }\r\n\r\n\r\n    return input.map((value, i) => {\r\n        return i % 3 ? null : <div className=\"container\" name={name} style={{ textAlign: 'center' }} key={i}>\r\n            <div className='row' style={{ alignItems: 'center' }}>\r\n                <div className=\"col-3\">\r\n                    <Typography variant='body1' style={{\r\n                        background: 'lightblue',\r\n                        marginBottom: '2px'\r\n                    }}>\r\n                        {name.replace('_', ' ') + ' ' + String(i / 3)}\r\n                    </Typography>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                    <TextField\r\n                        value={input[i]}\r\n                        error={Object.keys(error).length > 0}\r\n                        helperText={error[0]}\r\n                        onChange={(event) => handleChange(event, i)}\r\n                        style={{ marginBottom: '1rem' }}\r\n                    />\r\n                </div>\r\n                <div className=\"col-3\">\r\n                    <TextField\r\n                        value={input[i + 1]}\r\n                        error={Object.keys(error).length > 0}\r\n                        helperText={error[1]}\r\n                        onChange={(event) => handleChange(event, i + 1)}\r\n                        style={{ marginBottom: '1rem' }}\r\n                    />\r\n                </div>\r\n                <div className=\"col-3\">\r\n                    <TextField\r\n                        value={input[i + 2]}\r\n                        error={Object.keys(error).length > 0}\r\n                        helperText={error[1]}\r\n                        onChange={(event) => handleChange(event, i + 2)}\r\n                        style={{ marginBottom: '1rem' }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    })\r\n}\r\nconst mapActiontoProps = {\r\n    setConfig,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data,\r\n});\r\n\r\nlet LocationField = connect(mapStateToProps, mapActiontoProps)(LocationFieldUnconnect)\r\n\r\n\r\nlet LocationFields = (props) => {\r\n\r\n    const index = sections_name.indexOf('Simulation');\r\n    const sim_types = props.data.configValues[index]['radio']['sim_types'][0]\r\n    const sim_types_fields = optionalFieldExist[sim_types]\r\n    return Object.entries(props.values).map((value) => {\r\n        if (!optionalField.includes(value[0]) || (optionalField.includes(value[0]) && sim_types_fields.includes(value[0])))\r\n            return <LocationField cat={props.cat} field={value[0]} value={value} key={value[0]} />\r\n    })\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapActiontoProps)(LocationFields)","import { Paper, Typography } from '@material-ui/core';\r\nimport React from 'react'\r\nimport SearchBar from '../tracks/searchBar';\r\nimport { useReactiveVar } from '@apollo/client';\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { default_values, sections_name } from '../default_value';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport RadioFields from '../components/radioField';\r\nimport RangeFields from '../components/rangeField';\r\nimport InputFields from '../components/inputField';\r\nimport CheckFields from '../components/checkField';\r\nimport MaterialFields from '../components/materialField';\r\n\r\nimport { currentSection } from '../util/cache';\r\n\r\nimport { configSecName, structSecName, mainSectionName } from '../util/cache';\r\nimport AssignFields from '../components/assignField';\r\nimport { headers } from '../components/headers';\r\nimport LocationFields from '../components/locationField';\r\nimport { GET_TRACKS_QUERY } from '../App';\r\nimport { connect } from 'react-redux';\r\nimport { setConfig } from '../redux/action/dataActions';\r\n\r\nconst ConfigManager = (props) => {\r\n    const configVar = useReactiveVar(configSecName)\r\n    const indexSec = sections_name.indexOf(configVar);\r\n    let sec = default_values[indexSec];\r\n\r\n    const index = sections_name.indexOf('Simulation');\r\n    const sim_types = props.data.configValues[index]['radio']['sim_types'][0]\r\n\r\n    React.useEffect(() => {\r\n        return () => {\r\n            localStorage.setItem('default_config', JSON.stringify(props.data.configValues))\r\n        };\r\n    }, []);\r\n\r\n    const { loading, error, data } = useQuery(GET_TRACKS_QUERY);\r\n\r\n    return (\r\n        <div style={{ marginTop: '3rem' }}>\r\n            <div className='container'>\r\n                <div className=\"form-group row\">\r\n                    {Object.entries(sec).map(([type, value]) => {\r\n                        if (Object.keys(value).length === 0) {\r\n                            return null\r\n                        }\r\n                        switch (type) {\r\n                            case 'check':\r\n                                return <div className='col-12' style={{ padding: '1rem' }} key={type}>\r\n                                    <Paper>\r\n                                        {headers.checkbox}\r\n                                        <CheckFields\r\n                                            cat={'check'}\r\n                                            values={value}\r\n                                            key={'check'} />\r\n                                    </Paper>\r\n                                </div>\r\n                            case 'coord':\r\n                                return <div className='col-12' style={{ padding: '1rem' }} key={type}>\r\n                                    <Paper>\r\n                                        {headers.coord}\r\n                                        <RangeFields\r\n                                            cat={'coord'}\r\n                                            values={value}\r\n                                            key={'coord'} />\r\n                                    </Paper>\r\n                                </div>\r\n                            case 'location':\r\n                                return <div className='col-12' style={{ padding: '1rem' }} key={type}>\r\n                                    <Paper>\r\n                                        {headers.location}\r\n                                        <LocationFields\r\n                                            cat={'location'}\r\n                                            values={value}\r\n                                            key={'location'} />\r\n                                    </Paper>\r\n                                </div>\r\n                            case 'material':\r\n                                return <div className='col-12' style={{ padding: '1rem' }} key={type}>\r\n                                    <Paper>\r\n                                        {headers.material}\r\n                                        <MaterialFields\r\n                                            cat={'material'}\r\n                                            values={value}\r\n                                            key={'material'} />\r\n                                    </Paper>\r\n                                </div>\r\n                            case 'input':\r\n                                return <div className='col-12' style={{ padding: '1rem' }} key={type}>\r\n                                    <Paper>\r\n                                        {headers.input}\r\n                                        <InputFields\r\n                                            cat={'input'}\r\n                                            values={value}\r\n                                            key={'input'} />\r\n                                    </Paper>\r\n                                </div>\r\n                            case 'material_assign':\r\n                                return <div className='col-12' style={{ padding: '1rem' }} key={type}>\r\n                                    <Paper>\r\n                                        {headers.material_assign}\r\n                                        <AssignFields\r\n                                            cat={'material_assign'}\r\n                                            values={value}\r\n                                            key={'material_assign'} />\r\n                                    </Paper>\r\n                                </div>\r\n                            case 'range':\r\n                                return <div className='col-12' style={{ padding: '1rem' }} key={type}>\r\n                                    <Paper>\r\n                                        {headers.range}\r\n                                        <RangeFields\r\n                                            cat={'range'}\r\n                                            values={value}\r\n                                            key={'range'} />\r\n                                    </Paper>\r\n                                </div>\r\n                            case 'radio':\r\n                                return <div className='col-12' style={{ padding: '1rem' }} key={type}>\r\n                                    <Paper>\r\n                                        <RadioFields\r\n                                            cat={'radio'}\r\n                                            values={value}\r\n                                            key={'radio'} />\r\n                                    </Paper>\r\n\r\n                                </div>\r\n                            default:\r\n                                break\r\n                        }\r\n                    })}\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapActiontoProps = {\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapActiontoProps)(ConfigManager)\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport default function CircularProgressWithLabel(props) {\r\n    return (\r\n        <Box position=\"relative\" display=\"inline-flex\">\r\n            <CircularProgress variant=\"static\" {...props} />\r\n            <Box\r\n                top={0}\r\n                left={0}\r\n                bottom={0}\r\n                right={0}\r\n                position=\"absolute\"\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n            >\r\n                <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\r\n                    props.value,\r\n                )}%`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nCircularProgressWithLabel.propTypes = {\r\n    /**\r\n     * The value of the progress indicator for the determinate and static variants.\r\n     * Value between 0 and 100.\r\n     */\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\n","import { Button, Card, IconButton, makeStyles, Paper, Tooltip, Typography, withStyles } from '@material-ui/core';\r\nimport React, { useState, Component } from 'react'\r\nimport CircularProgressWithLabel from '../util/progress';\r\nimport { ExpandMoreRounded } from '@material-ui/icons';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Box from '@material-ui/core/Box';\r\nimport clsx from 'clsx';\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport { pics } from '../default_value';\r\nimport Error from '../util/Error';\r\nimport { plotDict, rms } from '../util/cache';\r\nimport { connect } from 'react-redux';\r\nimport { getPlots } from '../redux/action/dataActions';\r\n\r\nconst useStyles = makeStyles(\r\n    (theme) => ({\r\n        expand: {\r\n            transform: 'rotate(0deg)',\r\n            marginLeft: 'auto',\r\n            transition: theme.transitions.create('transform', {\r\n                duration: theme.transitions.duration.shortest,\r\n            }),\r\n        },\r\n        expandOpen: {\r\n            transform: 'rotate(180deg)',\r\n        },\r\n    })\r\n)\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n    const BorderLinearProgress = withStyles((theme) => ({\r\n        root: {\r\n            height: 10,\r\n            borderRadius: 5,\r\n        },\r\n        colorPrimary: {\r\n            backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n        },\r\n        bar: {\r\n            borderRadius: 5,\r\n            backgroundColor: '#1a90ff',\r\n        },\r\n    }))(LinearProgress);\r\n\r\n    return (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n            <Box width=\"100%\" mr={1}>\r\n                <BorderLinearProgress variant=\"determinate\" value={props.value} />\r\n            </Box>\r\n            <Box minWidth={'4rem'}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n                    props.value,\r\n                )} / 100`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nfunction Download(url) {\r\n    document.getElementById('Download').src = Axios.defaults.baseURL + '/' + url;\r\n};\r\n\r\nfunction SimProgress(props) {\r\n    const classes = useStyles();\r\n    const progress = props.progress;\r\n    const [expand, setexpand] = useState(true)\r\n\r\n    return <>\r\n        <div className=\"row mt-2\">\r\n            <div className='col-4' style={{ textAlign: 'left' }}>\r\n                <Typography variant='h6'>\r\n                    progress\r\n                        </Typography>\r\n            </div>\r\n            <div className='col-4'>\r\n                <div style={{ margin: 'auto' }} >\r\n                    <CircularProgressWithLabel value={progress['percent']} />\r\n                </div>\r\n            </div>\r\n            <div className='offset-2 col-2'>\r\n                <IconButton\r\n                    style={{ outline: 'none' }}\r\n                    onClick={() => { setexpand(!expand) }}\r\n                    aria-expanded={expand}\r\n                >\r\n                    <ExpandMoreRounded\r\n                        className={clsx(classes.expand, {\r\n                            [classes.expandOpen]: expand,\r\n                        })} />\r\n                </IconButton>\r\n            </div>\r\n        </div>\r\n        {expand ? <div className='row mt-2'>\r\n            <div className='col-12'>\r\n                <LinearProgressWithLabel value={progress['percent']} />\r\n            </div>\r\n        </div> : null}\r\n    </>\r\n}\r\n\r\nfunction ResultsMonitor(props) {\r\n    const [progress_data, setprogress_data] = useState({ current: 0, total: 1, percent: 0 });\r\n    let progress_data_local = { current: 0, total: 1, percent: 0 };\r\n    const startSim = (e) => {\r\n        e.preventDefault()\r\n        Axios.post('/longtask/', JSON.stringify(props.data.configValues))\r\n            .then(res => {\r\n                const status_url = res.data.Location;\r\n                update_progress(status_url)\r\n            })\r\n            .catch(error => {\r\n                alert('Unexpected error');\r\n\r\n            })\r\n        alert('simulation started')\r\n    }\r\n\r\n    const setPlots = (data) => {\r\n        return pics.map((pic) => {\r\n            const iframe = document.getElementById(pic);\r\n            if (!iframe) return\r\n            iframe.contentDocument.open()\r\n            iframe.contentDocument.write(data)\r\n            iframe.contentDocument.close()\r\n        })\r\n    }\r\n\r\n    const update_progress = (status_url) => {\r\n        Axios.get('status/' + status_url)\r\n            .then(res => {\r\n                progress_data_local = res.data;\r\n                const percent = parseInt(progress_data_local['current'] * 100 / progress_data_local['total']);\r\n                progress_data_local['percent'] = percent;\r\n                setprogress_data(progress_data_local)\r\n                if (progress_data_local['state'] != 'PENDING' && progress_data_local['state'] != 'PROGRESS' && 'result' in progress_data_local) {\r\n                    props.getPlots(setPlots)\r\n                    console.log('show result')\r\n                }\r\n                else {\r\n                    // rerun in 2 seconds\r\n                    setTimeout(function () {\r\n                        update_progress(status_url);\r\n                    }, 2000);\r\n                }\r\n            })\r\n    }\r\n\r\n    const cancelSim = (e) => {\r\n        e.preventDefault()\r\n    }\r\n    const downloadMean = (e) => {\r\n        e.preventDefault()\r\n        Download('download_mean')\r\n    }\r\n\r\n    const downloadField = (e) => {\r\n        e.preventDefault()\r\n        Download('download_field')\r\n    }\r\n    return (\r\n        <Paper elevation={3}>\r\n            <iframe id=\"Download\" style={{ display: \"none\" }}></iframe>\r\n\r\n            <div className='container' style={{ textAlign: 'center', paddingBottom: '2rem' }}>\r\n                <Typography variant='h5'> Results </Typography>\r\n                <div className=\"row mt-2\">\r\n\r\n                    <div className='col-4' style={{ textAlign: 'left' }}>\r\n                        <Typography variant='h6'>\r\n                            Simulation\r\n                        </Typography>\r\n                    </div>\r\n                    <div className='col-3'>\r\n                        <Button style={{ width: '5rem' }} id='start-bg-job' type=\"submit\" class=\"btn btn-primary\" onClick={startSim}>Start</Button>\r\n                    </div>\r\n                    <div className='col-3'>\r\n                        <Button style={{ width: '5rem' }} id='start-bg-job' type=\"submit\" class=\"btn btn-primary\" onClick={cancelSim}>Cancel</Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-2\">\r\n\r\n                    <div className='col-4' style={{ textAlign: 'left' }}>\r\n                        <Typography variant='h6'>\r\n                            Download\r\n                                    </Typography>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                        <Button style={{ width: '5rem' }} type=\"submit\" class=\"btn btn-primary\" onClick={downloadMean}>Mean</Button>\r\n                    </div>\r\n\r\n                    <div className=\"col-3\">\r\n                        <Button style={{ width: '5rem' }} type=\"submit\" class=\"btn btn-primary\" onClick={downloadField}>Raw</Button>\r\n                    </div>\r\n                </div>\r\n                <SimProgress progress={progress_data} />\r\n            </div>\r\n        </Paper>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapActiontoProps = {\r\n    getPlots\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapActiontoProps)(ResultsMonitor);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n\r\n});\r\n\r\n\r\nfunction valuetext(value) {\r\n    return `${value}°C`;\r\n}\r\n\r\nexport default function RangeSlider(props) {\r\n\r\n    const classes = useStyles();\r\n    const { value, setValue } = props;\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Slider\r\n                value={value}\r\n                onChange={handleChange}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n                getAriaValueText={valuetext}\r\n                marks={props.marks}\r\n\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import { noPlots, pics, plots } from '../default_value';\r\nimport { IconButton, Paper, Typography } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useReactiveVar } from '@apollo/client';\r\nimport Axios from 'axios';\r\nimport Error from '../util/Error';\r\nimport Plot from 'react-plotly.js';\r\nimport { connect } from 'react-redux';\r\nimport { setSlider } from '../redux/action/dataActions';\r\nimport { plotDict } from '../util/cache';\r\nimport RangeSlider from './slider';\r\n\r\nfunction makeArr(startValue, stopValue, cardinality) {\r\n    var arr = [];\r\n    var step = (stopValue - startValue) / (cardinality - 1);\r\n    for (var i = 0; i < cardinality; i++) {\r\n        arr.push(startValue + (step * i));\r\n    }\r\n    return arr;\r\n}\r\n\r\nfunction PlotlyPlot(props) {\r\n    let min = 0\r\n    let max = 0\r\n    let zmin = 0\r\n    let zmax = 0\r\n\r\n    const plotData = props.rms[props.plot]\r\n\r\n    if (!(props.plot in props.sliderValue)) {\r\n        if (props.plot.includes('log')) props.setSlider(props.plot, [50, 100])\r\n        else props.setSlider(props.plot, [0, 100])\r\n    }\r\n    const value = props.sliderValue[props.plot]\r\n\r\n    if (!!plotData && plotData.map) {\r\n        if (props.plot === 'rms_block') {\r\n            min = 0\r\n            max = props.rms['rms_block_max']\r\n        } else if (props.plot.includes('log') && !props.plot.includes('particle_only')) {\r\n            let minRow = plotData.map(function (row) { return Math.min.apply(Math, row); });\r\n            min = Math.min.apply(null, minRow);\r\n            min = min / 4;\r\n            max = Math.log(props.rms['rms_block_max'])\r\n        } else {\r\n            let minRow = plotData.map(function (row) { return Math.min.apply(Math, row); });\r\n            min = Math.min.apply(null, minRow);\r\n            let maxRow = plotData.map(function (row) { return Math.max.apply(Math, row); });\r\n            max = Math.max.apply(null, maxRow);\r\n        }\r\n        let diff = (max - min) / 100;\r\n        zmin = value[0] * diff + min;\r\n        zmax = value[1] * diff + min;\r\n\r\n\r\n    }\r\n\r\n    let markers = [];\r\n    const valueRange = makeArr(0, 100, 5);\r\n    const markerRange = makeArr(min, max, 5)\r\n    valueRange.map((v, i) => {\r\n        markers.push({ value: v, label: String(markerRange[i].toFixed(4)) })\r\n    })\r\n\r\n    return <div className={props.small ? 'col-12' : 'col-4'} key={props.plot}>\r\n        <div className='row'>\r\n            <Plot\r\n                data={\r\n                    [{\r\n                        z: plotData,\r\n                        x: !!props.rms['rms_xy'] && props.rms['rms_xy'][0],\r\n                        y: !!props.rms['rms_xy'] && props.rms['rms_xy'][1],\r\n                        type: 'heatmap',\r\n                        zmin: zmin,\r\n                        zmax: zmax,\r\n                        hoverongaps: false\r\n                    }]\r\n                }\r\n                layout={{\r\n                    width: props.small ? 450 : 550, height: props.small ? 450 : 550,\r\n                    title: props.plot\r\n                }}\r\n            />\r\n        </div>\r\n        {!props.small && !!plotData && plotData.map && <div className='row' style={{ justifyContent: 'center' }}>\r\n            <div className='col-10'><RangeSlider marks={markers} value={props.sliderValue[props.plot]} setValue={(val) => {\r\n                props.setSlider(props.plot, val)\r\n            }} />\r\n            </div>\r\n        </div>}\r\n    </div>\r\n}\r\n\r\n\r\n\r\nconst mapActiontoProps = {\r\n    setSlider\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data,\r\n    rms: state.data.rms,\r\n    sliderValue: state.data.sliderValue\r\n});\r\n\r\nexport default connect(mapStateToProps, mapActiontoProps)(PlotlyPlot);","\r\nimport { noPlots, pics, plots } from '../default_value';\r\nimport { IconButton, Paper, Typography } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useReactiveVar } from '@apollo/client';\r\nimport Axios from 'axios';\r\nimport Error from '../util/Error';\r\nimport Plot from 'react-plotly.js';\r\nimport { connect } from 'react-redux';\r\nimport { getPlots } from '../redux/action/dataActions';\r\nimport PlotlyPlot from '../components/plotlyPlot';\r\n\r\nfunction ResultStructure(props) {\r\n    const setPlots = (data) => {\r\n        const iframe = document.getElementById(props.pic);\r\n        iframe.contentDocument.open()\r\n        iframe.contentDocument.write(data)\r\n        iframe.contentDocument.close()\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.data.structure === null) {\r\n            props.getPlots(setPlots)\r\n        } else {\r\n            setPlots(props.data.structure)\r\n        }\r\n\r\n        return () => {\r\n            const iframe = document.getElementById(props.pic);\r\n            iframe.src = 'about:blank'\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <div className={props.small ? 'col-12' : 'col-6'}\r\n            key={props.pic}>\r\n            <div className='row'>\r\n                <Typography variant='body2' style={{ margin: 'auto' }}>{props.pic}</Typography>\r\n                <iframe\r\n                    style={{\r\n                        width: '36rem',\r\n                        height: '36rem',\r\n                    }}\r\n                    id={props.pic}>\r\n                </iframe>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapActiontoProps = {\r\n    getPlots\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapActiontoProps)(ResultStructure);","\r\nimport { noPlots, pics, plots } from '../default_value';\r\nimport { IconButton, Paper, Typography } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useReactiveVar } from '@apollo/client';\r\nimport Axios from 'axios';\r\nimport Error from '../util/Error';\r\nimport Plot from 'react-plotly.js';\r\nimport { connect } from 'react-redux';\r\nimport { getPlots } from '../redux/action/dataActions';\r\nimport PlotlyPlot from '../components/plotlyPlot';\r\nimport ResultStructure from '../components/resultStructure';\r\nimport ReactPlayer from 'react-player';\r\n\r\n\r\nfunction ResultsExplorer(props) {\r\n\r\n\r\n    const Viz = props.data.configValues[0]['check'];\r\n    let mainPlot = '';\r\n    if (!Viz['view_only_particles'] && !Viz['log_res']) {\r\n        mainPlot = 'rms_block'\r\n    } else if (Viz['view_only_particles'] && Viz['log_res']) {\r\n        mainPlot = 'rms_particle_only_log'\r\n    } else if (Viz['view_only_particles']) {\r\n        mainPlot = 'rms_particle_only'\r\n    } else if (Viz['log_res']) {\r\n        mainPlot = 'rms_block_log'\r\n    }\r\n\r\n    return (\r\n        <Paper elevation={3}>\r\n            <div className='container-fluid mt-2' style={{ textAlign: 'center' }}>\r\n                <Typography variant='h5'>Plot</Typography>\r\n                <div className=\"row\">\r\n                    {Viz['rms'] && props.small && <PlotlyPlot plot={mainPlot} small={props.small} />}\r\n\r\n                    {!props.small && <div className={props.small ? 'col-12' : 'col-4'} key={props.plot}>\r\n                        <div className='row'>\r\n                            <ReactPlayer url={Axios.defaults.baseURL + '/transient_plot/'} height=\"550px\" width=\"550px\" controls={true} />\r\n                        </div>\r\n                    </div>\r\n                    }\r\n                    {!props.small && plots.map((plot) => {\r\n                        return !noPlots.includes(plot) && <PlotlyPlot plot={plot} />\r\n                    })}\r\n                    {Viz['structure'] && pics.map((pic) =>\r\n                        <ResultStructure small={props.small} pic={pic} />\r\n                    )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </Paper>\r\n    )\r\n}\r\n\r\n\r\nconst mapActiontoProps = {\r\n    getPlots\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapActiontoProps)(ResultsExplorer);","import { IconButton, Paper, Typography } from '@material-ui/core';\r\nimport React, { useState, Component, useEffect } from 'react'\r\nimport rms from '../statics/rms.png';\r\nimport structure from '../statics/structure.png';\r\nimport transient from '../statics/transient.png';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { currentSection, plotDict, freshSimed } from '../util/cache';\r\nimport { useReactiveVar } from '@apollo/client';\r\nimport ResultsMonitor from '../components/resultsMonitor';\r\nimport Axios from 'axios';\r\nimport { pics } from '../default_value';\r\nimport Error from '../util/Error';\r\nimport ResultsExplorer from './resultsExplorer';\r\n\r\nexport default function Result() {\r\n    const defaultImages = {\r\n        rms: rms, structure: structure, transient: transient\r\n    };\r\n    const [expand, setExpand] = useState({ img: defaultImages['structure'], title: 'structure' });\r\n    const configVar = useReactiveVar(currentSection)\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            {configVar !== 'Geometry' &&\r\n                <>\r\n                    <ResultsMonitor />\r\n                    <Paper elevation={3}>\r\n                        <div className='container mt-2' style={{ textAlign: 'center' }}>\r\n\r\n                            <div className=\"row\">\r\n                                <div className='col-12'>\r\n                                    <ResultsExplorer small />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Paper>\r\n                </>\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\nimport { Mutation, Query } from 'react-apollo';\r\nimport { gql } from '@apollo/client';\r\nimport axios from 'axios';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\n\r\nimport { GET_TRACKS_QUERY } from '../App';\r\nimport { StorageOutlined } from \"@material-ui/icons\";\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\n\r\nimport Tab from '@material-ui/core/Tab';\r\nimport TabContext from '@material-ui/lab/TabContext';\r\nimport TabList from '@material-ui/lab/TabList';\r\nimport TabPanel from '@material-ui/lab/TabPanel';\r\nimport { AppBar, Grid, Tooltip } from \"@material-ui/core\";\r\nimport Track, { TrackHead } from \"./readTrack\";\r\nimport Error from '../util/Error';\r\nimport Axios from \"axios\";\r\nimport { connect } from 'react-redux';\r\nimport { setConfig, setAllConfig } from '../redux/action/dataActions';\r\n\r\nconst CreateTrack = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [title, setTitle] = useState(\"\");\r\n    const [hashtag, setHashtag] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [file, setFile] = useState(\"\");\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const [fileError, setFileError] = useState(\"\");\r\n    const [tabOpen, setTabOpen] = useState('1');\r\n    const [configUsed, setconfigUsed] = useState(1)\r\n    let tracks = null;\r\n\r\n    const handleChange = (event, newValue) => {\r\n        event.preventDefault();\r\n        setTabOpen(newValue);\r\n    };\r\n\r\n\r\n    const handleAudioChange = event => {\r\n        const selectedFile = event.target.files[0]\r\n        const fileSizeLimit = 15000000;\r\n        if (selectedFile && selectedFile.size > fileSizeLimit) {\r\n            setFileError(`${selectedFile.name}: the file is limited 15Mb`)\r\n        } else {\r\n            setFile(selectedFile);\r\n            setFileError('');\r\n        }\r\n    }\r\n\r\n    const handleAudioUpload = async () => {\r\n        try {\r\n            const data = new FormData();\r\n            data.append('file', file);\r\n            const res = await axios.post(axios.defaults.baseURL + \"/music/\", data);\r\n            return res.data.url;\r\n        } catch (err) {\r\n            console.error('Cannot upload file', err);\r\n            setSubmitting(false);\r\n        }\r\n    };\r\n\r\n    const handleUpdateCache = (cache, { data: { createTrack } }) => {\r\n        const data = cache.readQuery({ query: GET_TRACKS_QUERY })\r\n        const track = data.track.concat(createTrack.track)\r\n        setconfigUsed(createTrack.track.id);\r\n        cache.writeQuery({ query: GET_TRACKS_QUERY, data: { track } })\r\n    }\r\n\r\n    const handleSubmit = async (event, createTrack) => {\r\n        event.preventDefault();\r\n        if (tabOpen === '2') {\r\n            setSubmitting(true);\r\n            const uploadedUrl = await handleAudioUpload();\r\n            createTrack({ variables: { title, hashtag, description, url: uploadedUrl } });\r\n        } else if (tabOpen === '1') {\r\n            if (!tracks) return\r\n            const index = tracks.findIndex(\r\n                track => track.id === configUsed\r\n            )\r\n            Axios.get('/music/' + tracks[index].url)\r\n                .then(config => props.setAllConfig(config.data))\r\n                .catch(e => console.log(e))\r\n        }\r\n\r\n        setSubmitting(false)\r\n        setOpen(false)\r\n    };\r\n\r\n    let withTrack = (obj) => { };\r\n\r\n    return (\r\n        <>\r\n            {/* create track button */}\r\n            <Tooltip title=\"Open config\" placement=\"top\">\r\n                <Button onClick={() => setOpen(true)} variant=\"contained\" className={props.classes.fab} color=\"secondary\">\r\n                    {open ? <ClearIcon /> : <LaunchIcon />}\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            {/* create track DIALOG */}\r\n\r\n            <Dialog open={open} className={props.classes.dialog} fullWidth classes={{ paper: props.classes.dialogPaper }} >\r\n                <DialogTitle>\r\n                    <AppBar position=\"static\">\r\n                        <TabContext value={tabOpen}>\r\n                            <TabList onChange={handleChange} aria-label=\"tabs\">\r\n                                <Tab label=\"chose from existing\" value=\"1\" />\r\n                                <Tab label=\"upload\" value=\"2\" />\r\n                            </TabList>\r\n                        </TabContext>\r\n                    </AppBar>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <TabContext value={tabOpen}>\r\n\r\n                        {tabOpen === '1' && <TabPanel value=\"1\">\r\n                            <TrackHead />\r\n                            <Query query={GET_TRACKS_QUERY}>\r\n                                {({ data, loading, error }) => {\r\n                                    if (loading) return null;\r\n                                    if (error) return <Error error={error} />;\r\n                                    tracks = data.track;\r\n                                    return <Grid container>\r\n                                        {loading && <div> Loading... </div>}\r\n                                        {tracks.map((track) => <Track key={track.id} track={track} setconfigUsed={setconfigUsed} configUsed={configUsed} />)}\r\n                                    </Grid>\r\n                                }}\r\n                            </Query>\r\n\r\n                        </TabPanel>\r\n                        }\r\n                        {tabOpen === '2' && <TabPanel value=\"2\">\r\n                            <Mutation\r\n                                mutation={CREATE_TRACK_MUTATION}\r\n                                onCompleted={data => {\r\n                                    setSubmitting(false)\r\n                                    setOpen(false)\r\n                                    setTitle(\"\")\r\n                                    setDescription(\"\")\r\n                                    setHashtag(\"\")\r\n                                    setFile(\"\")\r\n                                }}\r\n                                update={handleUpdateCache}\r\n                            /* refetchQueries={() => [{ query: GET_TRACKS_QUERY }]} */\r\n                            >\r\n                                {(createTrack, { loading, error }) => {\r\n                                    if (loading) return null;\r\n                                    if (error) return <Error error={error} />;\r\n                                    withTrack = createTrack;\r\n                                    return (<>\r\n                                        <form name='form'>\r\n                                            <DialogContentText>\r\n                                                Title\r\n                                            </DialogContentText>\r\n                                            <FormControl fullWidth>\r\n                                                <TextField\r\n                                                    label=\"Title\"\r\n                                                    placeholder=\"Title\"\r\n                                                    onChange={event => setTitle(event.target.value)}\r\n                                                    value={title}\r\n                                                    className={props.classes.textField}\r\n                                                />\r\n                                            </FormControl>\r\n\r\n                                            <FormControl fullWidth>\r\n                                                <TextField\r\n                                                    rows=\"3\"\r\n                                                    label=\"Description\"\r\n                                                    placeholder=\"Description\"\r\n                                                    onChange={event => setDescription(event.target.value)}\r\n                                                    value={description}\r\n                                                    className={props.classes.textField}\r\n                                                />\r\n                                            </FormControl>\r\n\r\n                                            <FormControl error={Boolean(fileError)}>\r\n                                                <input\r\n                                                    id=\"audio\"\r\n                                                    required\r\n                                                    type=\"file\"\r\n                                                    accept=\"audio\"\r\n                                                    className={props.classes.input}\r\n                                                    onChange={handleAudioChange}\r\n                                                />\r\n                                                <label htmlFor=\"audio\">\r\n                                                    <Button variant=\"outlined\" color={file ? \"secondary\" : \"inherit\"}\r\n                                                        component=\"span\" className={props.classes.button}\r\n                                                    >\r\n                                                        Max size 15Mb\r\n                                                <StorageOutlined className={props.classes.icon} />\r\n                                                    </Button>\r\n                                                    {file && file.name}\r\n                                                    <FormHelperText>{fileError}</FormHelperText>\r\n                                                </label>\r\n                                            </FormControl>\r\n\r\n                                        </form>\r\n                                    </>)\r\n                                }}\r\n                            </Mutation>\r\n\r\n                        </TabPanel>\r\n                        }\r\n                    </TabContext>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        disabled={submitting}\r\n                        onClick={() => setOpen(false)}\r\n                        className={props.classes.cancel}\r\n                    >\r\n                        cancel\r\n                    </Button>\r\n                    <Button\r\n                        disabled={\r\n                            tabOpen === '2' && (submitting || !title.trim() || !description.trim() || !file)\r\n                        }\r\n                        type=\"cancel\"\r\n                        className={props.classes.save}\r\n                        onClick={event => {\r\n                            handleSubmit(event, withTrack)\r\n                        }}\r\n                    >\r\n                        {submitting ? (\r\n                            <CircularProgress className={props.classes.save} size={24} />\r\n                        ) : (\"submit\")}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nconst CREATE_TRACK_MUTATION = gql`\r\n  mutation ($title: String!, $description: String!, $hashtag: String!, $url: String!) {\r\n    createTrack(title: $title, description: $description, hashtag: $hashtag, url: $url) \r\n    {\r\n      track {\r\n        id\r\n        title\r\n        description\r\n        hashtag\r\n        url\r\n        owner {\r\n          id\r\n          username\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\"\r\n    },\r\n    dialog: {\r\n        margin: \"0 auto\",\r\n        width: '600px',\r\n        // height: '700px',\r\n    },\r\n    dialogPaper: {\r\n        minHeight: '60vh',\r\n        maxHeight: '50vh',\r\n    },\r\n    textField: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    cancel: {\r\n        color: \"red\"\r\n    },\r\n    save: {\r\n        color: \"green\"\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    icon: {\r\n        marginLeft: theme.spacing(1)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n    fab: {\r\n        position: \"fixed\",\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(1),\r\n        zIndex: \"200\"\r\n    }\r\n});\r\nconst mapActiontoProps = {\r\n    setConfig,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data,\r\n});\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapActiontoProps)(CreateTrack));\r\n","import React, { useState } from \"react\";\r\nimport { Mutation } from 'react-apollo';\r\nimport { gql } from 'apollo-boost';\r\nimport axios from 'axios';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\r\nimport { AppBar, Grid, Tooltip } from \"@material-ui/core\";\r\n\r\nimport { GET_TRACKS_QUERY } from '../App';\r\nimport Error from '../util/Error';\r\nimport { GetApp, StorageOutlined } from \"@material-ui/icons\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport download from '../util/download';\r\nimport { connect } from 'react-redux';\r\nimport { getPlots } from '../redux/action/dataActions';\r\n\r\nconst DownloadConfig = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [title, setTitle] = useState(\"\");\r\n    const [hashtag, setHashtag] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [file, setFile] = useState(\"\");\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const [fileError, setFileError] = useState(\"\");\r\n\r\n\r\n    const handleAudioUpload = async (f) => {\r\n        try {\r\n            const data = new FormData();\r\n            let file = new File([f], `${title}.txt`, { type: \"text/plain\" });\r\n            data.append('file', file);\r\n            const res = await axios.post(axios.defaults.baseURL + \"/music/\", data);\r\n            return res.data.url;\r\n        } catch (err) {\r\n            console.error('Cannot upload file', err);\r\n            setSubmitting(false);\r\n        }\r\n    };\r\n\r\n\r\n    const [createTrack] = useMutation(CREATE_TRACK_MUTATION, {\r\n        update(cache, { data: { createTrack } }) {\r\n            const data = cache.readQuery({ query: GET_TRACKS_QUERY })\r\n            const track = data.track.concat(createTrack.track)\r\n            cache.writeQuery({ query: GET_TRACKS_QUERY, data: { track } })\r\n        }\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        event.preventDefault()\r\n        setFileError('')\r\n        setTitle(event.target.value);\r\n    }\r\n\r\n    const handleSubmit = async (event, f) => {\r\n        event.preventDefault();\r\n        if (title === '') {\r\n            setFileError('cannot be empty')\r\n            return\r\n        }\r\n        setSubmitting(true);\r\n        const uploadedUrl = await handleAudioUpload(f);\r\n        createTrack({ variables: { title, hashtag, description, url: uploadedUrl } });\r\n\r\n        setSubmitting(false)\r\n        setOpen(false)\r\n        setTitle(\"\")\r\n        setDescription(\"\")\r\n        setHashtag(\"\")\r\n        setFile(\"\")\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* create track button */}\r\n            <Tooltip title=\"Download config and result\" placement=\"top\">\r\n                <Button onClick={() => setOpen(true)} variant=\"contained\" className={props.classes.fab} color=\"secondary\">\r\n                    <GetApp />\r\n                </Button>\r\n            </Tooltip>\r\n            <Dialog open={open} className={props.classes.dialog}>\r\n                <form name='form'>\r\n                    <DialogTitle>Download configuration</DialogTitle>\r\n                    <DialogContent>\r\n                        <div className='container' style={{ width: '28rem' }}>\r\n                            <div className='row' style={{ display: 'flex', alignItems: 'flex-end' }}>\r\n                                <div className='col-6'>\r\n\r\n                                    <TextField\r\n                                        value={title}\r\n                                        label='filename'\r\n                                        error={fileError !== ''}\r\n                                        helperText={fileError}\r\n                                        onChange={(event) => handleChange(event)}\r\n                                    />\r\n                                </div>\r\n                                <div className='col-6'>\r\n                                    <Button\r\n                                        style={{ width: '12rem', height: '3rem' }}\r\n                                        onClick={(event) => {\r\n                                            setFile(JSON.stringify(props.data.configValues))\r\n                                            handleSubmit(event, JSON.stringify(props.data.configValues))\r\n                                            if (fileError !== '') setOpen(false)\r\n                                        }}\r\n                                        className={props.classes.save}\r\n                                    >\r\n                                        {submitting ? (\r\n                                            <CircularProgress className={props.classes.save} size={24} />\r\n                                        ) : (\"Save Config Online\")}\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row' style={{ display: 'flex', alignItems: 'flex-end' }}>\r\n                                <div className='col-6'>\r\n                                </div>\r\n                                <div className='col-6'>\r\n                                    <Button\r\n                                        style={{ width: '12rem', height: '3rem' }}\r\n                                        disabled={submitting}\r\n                                        onClick={() => {\r\n                                            setOpen(false)\r\n                                            if (fileError !== '') setOpen(false)\r\n                                            download(title, JSON.stringify(props.data.configValues))\r\n                                        }}\r\n                                        className={props.classes.save}\r\n                                    >\r\n                                        Download Config Locally\r\n                  </Button>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-12'>\r\n                                    <Button\r\n                                        style={{ margin: 'auto', display: 'flex' }}\r\n                                        disabled={submitting}\r\n                                        onClick={() => setOpen(false)}\r\n                                        className={props.classes.cancel}\r\n                                    >\r\n                                        cancel\r\n                  </Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </DialogContent>\r\n                </form>\r\n            </Dialog>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nconst CREATE_TRACK_MUTATION = gql`\r\n  mutation ($title: String!, $description: String!, $hashtag: String!, $url: String!) {\r\n    createTrack(title: $title, description: $description, hashtag: $hashtag, url: $url) \r\n    {\r\n      track {\r\n        id\r\n        title\r\n        description\r\n        hashtag\r\n        url\r\n        owner {\r\n          id\r\n          username\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\"\r\n    },\r\n    dialog: {\r\n        margin: \"0 auto\",\r\n        maxWidth: 550\r\n    },\r\n    textField: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    cancel: {\r\n        color: \"red\"\r\n    },\r\n    save: {\r\n        color: \"green\"\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    icon: {\r\n        marginLeft: theme.spacing(1)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n    fab: {\r\n        position: \"fixed\",\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(10),\r\n        zIndex: \"200\"\r\n    }\r\n});\r\n\r\nconst mapActiontoProps = {\r\n    getPlots\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data,\r\n});\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapActiontoProps)(DownloadConfig));\r\n","export default function download(filename, text) {\r\n    var element = document.createElement('a');\r\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\r\n    element.setAttribute('download', filename);\r\n\r\n    element.style.display = 'none';\r\n    document.body.appendChild(element);\r\n\r\n    element.click();\r\n\r\n    document.body.removeChild(element);\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\nimport { Mutation } from 'react-apollo';\r\nimport { gql } from 'apollo-boost';\r\nimport axios from 'axios';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport { AppBar, Grid, Tooltip } from \"@material-ui/core\";\r\nimport { GET_TRACKS_QUERY } from '../App';\r\nimport Error from '../util/Error';\r\nimport { Refresh, StorageOutlined } from \"@material-ui/icons\";\r\n\r\nimport { default_values } from \"../default_value\";\r\nimport { connect } from 'react-redux';\r\nimport { setConfig, setAllConfig } from '../redux/action/dataActions';\r\n\r\n\r\nconst ResetConfig = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [submitting, setSubmitting] = useState(false);\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* create track button */}\r\n            <Tooltip title=\"Reset config\" placement=\"top\">\r\n                <Button onClick={() => setOpen(true)} variant=\"contained\" className={props.classes.fab} color=\"secondary\">\r\n                    <Refresh />\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Dialog open={open} className={props.classes.dialog}>\r\n                <form name='form' >\r\n                    <DialogTitle>Are you sure you want to reset the configuration</DialogTitle>\r\n                    <DialogActions>\r\n                        <Button\r\n                            disabled={submitting}\r\n                            onClick={() => setOpen(false)}\r\n                            className={props.classes.cancel}\r\n                        >\r\n                            cancel\r\n                  </Button>\r\n                        <Button\r\n                            className={props.classes.save}\r\n                            onClick={() => {\r\n                                props.setAllConfig(default_values);\r\n                                setOpen(false);\r\n                            }}\r\n                        >\r\n                            {submitting ? (\r\n                                <CircularProgress className={props.classes.save} size={24} />\r\n                            ) : (\"reset\")}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\"\r\n    },\r\n    dialog: {\r\n        margin: \"0 auto\",\r\n        maxWidth: 550\r\n    },\r\n    textField: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    cancel: {\r\n        color: \"red\"\r\n    },\r\n    save: {\r\n        color: \"green\"\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    icon: {\r\n        marginLeft: theme.spacing(1)\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n    fab: {\r\n        position: \"fixed\",\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(19),\r\n        zIndex: \"200\"\r\n    }\r\n});\r\n\r\nconst mapActiontoProps = {\r\n    setConfig,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data,\r\n});\r\nexport default withStyles(styles)(connect(mapStateToProps, mapActiontoProps)(ResetConfig));\r\n","import React from 'react'\r\nimport ConfigManager from './configManager'\r\nimport Result from './result'\r\nimport CreateTrack from '../tracks/createTrack';\r\nimport DownloadConfig from '../tracks/download';\r\nimport ResetConfig from '../tracks/reset';\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div className='container'>\r\n            <div className='row'>\r\n                <div className='col-6' style={{ padding: '1rem' }}>\r\n                    <ConfigManager />\r\n                </div>\r\n                <div className='col-6' style={{ padding: '1rem' }}>\r\n                    <Result />\r\n                </div>\r\n            </div>\r\n\r\n            <CreateTrack />\r\n            <DownloadConfig />\r\n            <ResetConfig />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nexport default class Draggable extends React.Component {\r\n    state = {\r\n        isDragging: false,\r\n\r\n        originalX: 0,\r\n        originalY: 0,\r\n\r\n        translateX: this.props.initial[0],\r\n        translateY: this.props.initial[1],\r\n\r\n        lastTranslateX: this.props.initial[0],\r\n        lastTranslateY: this.props.initial[1]\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('mousemove', this.handleMouseMove);\r\n        window.removeEventListener('mouseup', this.handleMouseUp);\r\n    }\r\n\r\n    handleMouseDown = ({ clientX, clientY }) => {\r\n        window.addEventListener('mousemove', this.handleMouseMove);\r\n        window.addEventListener('mouseup', this.handleMouseUp);\r\n\r\n        if (this.props.onDragStart) {\r\n            this.props.onDragStart();\r\n        }\r\n\r\n        this.setState({\r\n            originalX: clientX,\r\n            originalY: clientY,\r\n            isDragging: true\r\n        });\r\n    };\r\n\r\n    handleMouseMove = ({ clientX, clientY }) => {\r\n        const { isDragging } = this.state;\r\n        const { onDrag } = this.props;\r\n\r\n        if (!isDragging) {\r\n            return;\r\n        }\r\n\r\n        this.setState(prevState => ({\r\n            translateX: clientX - prevState.originalX + prevState.lastTranslateX,\r\n            translateY: clientY - prevState.originalY + prevState.lastTranslateY\r\n        }), () => {\r\n            if (onDrag) {\r\n                onDrag({\r\n                    translateX: this.state.translateX,\r\n                    translateY: this.state.translateY\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    handleMouseUp = () => {\r\n        window.removeEventListener('mousemove', this.handleMouseMove);\r\n        window.removeEventListener('mouseup', this.handleMouseUp);\r\n\r\n        this.setState(\r\n            {\r\n                originalX: 0,\r\n                originalY: 0,\r\n                lastTranslateX: this.state.translateX,\r\n                lastTranslateY: this.state.translateY,\r\n\r\n                isDragging: false\r\n            },\r\n            () => {\r\n                if (this.props.onDragEnd) {\r\n                    this.props.onDragEnd();\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const translateX = this.props.initial[0];\r\n        const translateY = this.props.initial[1];\r\n        const { children } = this.props;\r\n        const { isDragging } = this.state;\r\n\r\n        return (\r\n            <Container\r\n                onMouseDown={this.handleMouseDown}\r\n                x={translateX}\r\n                y={translateY}\r\n                isDragging={isDragging}\r\n                style={{\r\n                    transform: `translate(${translateX}px, ${translateY}px)`\r\n                }}\r\n            >\r\n                {children}\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst Container = styled.div.attrs(\r\n    ({ x, y }) => ({\r\n        transform: `translate(${x}px, ${y}px)`\r\n    }))`\r\n  cursor: grab;\r\n  \r\n  ${({ isDragging }) =>\r\n        isDragging && css`\r\n    opacity: 0.8;\r\n    cursor: grabbing;\r\n  `};\r\n`;","import { Paper, Tooltip, Typography } from '@material-ui/core';\r\nimport React, { useState, Component } from 'react'\r\nimport axis from '../statics/axis.png';\r\nimport { useReactiveVar } from '@apollo/client';\r\nimport Draggable from './balls';\r\nimport { connect } from 'react-redux';\r\nimport { setConfig } from '../redux/action/dataActions';\r\n\r\n\r\nfunction StructureEditor(props) {\r\n\r\n    const convX = (px) => {\r\n        return px / 40.5 - 6.53\r\n    }\r\n    const convY = (py) => {\r\n        return -py / 40.5 + 5.185\r\n    }\r\n    const convPx = (px) => {\r\n        return (px + 6.53) * 40.5\r\n    }\r\n    const convPy = (py) => {\r\n        return -(py - 5.185) * 40.5\r\n    }\r\n\r\n\r\n    let matrixPosXY = props.data.configValues[2]['coord']['solid_center'];\r\n    let matrixSizeXY = props.data.configValues[2]['coord']['solid_size'];\r\n\r\n    const setmatrixPos = (newInput) => {\r\n        props.setConfig(\r\n            2, 'coord', 'solid_center',\r\n            [convX(newInput.translateX) + matrixSizeXY[0] / 2, convY(newInput.translateY) - matrixSizeXY[1] / 2, 0]);\r\n    }\r\n\r\n    const matrixPos = [convPx(matrixPosXY[0] - matrixSizeXY[0] / 2), convPy(matrixPosXY[1] + matrixSizeXY[1] / 2)];\r\n    const matrixSize = [matrixSizeXY[0] * 40.5, matrixSizeXY[1] * 40.5];\r\n\r\n\r\n    let sourcePosXY = props.data.configValues[4]['coord']['center'];\r\n    let sourceSizeXY = props.data.configValues[4]['coord']['size'];\r\n    const sourceSize = [sourceSizeXY[0] * 40.5, sourceSizeXY[1] * 40.5];\r\n\r\n    const sourcePos = [convPx(sourcePosXY[0] - sourceSizeXY[0] / 2), convPy(sourcePosXY[1] + sourceSizeXY[1] / 2)];\r\n\r\n    const setsourcePos = (newInput) => {\r\n        props.setConfig(\r\n            4, 'coord', 'center',\r\n            [convX(newInput.translateX) + sourceSizeXY[0] / 2, convY(newInput.translateY) - sourceSizeXY[1] / 2, 0]);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Paper elevation={3}>\r\n                <div className='container mt-2' style={{ textAlign: 'center' }}>\r\n                    <Typography variant='h5' >Overall structure</Typography>\r\n                    <Paper elevation={3} style={{\r\n                        height: '30rem',\r\n                        backgroundImage: `url(${axis})`,\r\n                        backgroundRepeat: 'no-repeat',\r\n                        backgroundSize: '30rem',\r\n                    }} >\r\n\r\n                        <Draggable initial={sourcePos} onDrag={setsourcePos}>\r\n                            <Tooltip title=\"Source\" placement=\"top\">\r\n                                <div\r\n                                    style={{\r\n                                        position: 'absolute',\r\n                                        border: '1px solid black',\r\n                                        borderRadius: '1px',\r\n                                        width: '5px',\r\n                                        height: sourceSize[1],\r\n                                        background: '#EF767A'\r\n                                    }}\r\n                                />\r\n                            </Tooltip>\r\n                        </Draggable>\r\n                        <Draggable initial={matrixPos} onDrag={setmatrixPos}>\r\n                            <>\r\n                                <Tooltip title=\"Matrix\" placement=\"top\">\r\n                                    <div\r\n                                        style={{\r\n                                            position: 'absolute',\r\n                                            border: '1px solid black',\r\n                                            borderRadius: '1px',\r\n                                            width: matrixSize[0],\r\n                                            height: matrixSize[1],\r\n                                            background: '#456990',\r\n                                            opacity: '0.1'\r\n                                        }}\r\n                                    />\r\n                                </Tooltip>\r\n                                <Tooltip title=\"Center\" placement=\"top\">\r\n                                    <div\r\n                                        style={{\r\n                                            position: 'absolute',\r\n                                            border: '1px solid black',\r\n                                            borderRadius: '1px',\r\n                                            width: '20px',\r\n                                            height: '5px',\r\n                                            left: matrixSize[0] / 2 - 7,\r\n                                            bottom: -matrixSize[1] / 2,\r\n                                            background: 'red'\r\n                                        }}\r\n                                    />\r\n                                </Tooltip>\r\n                                <div\r\n                                    style={{\r\n                                        position: 'absolute',\r\n                                        border: '1px solid black',\r\n                                        borderRadius: '1px',\r\n                                        width: '5px',\r\n                                        height: '20px',\r\n                                        left: matrixSize[0] / 2,\r\n                                        bottom: -matrixSize[1] / 2 - 7,\r\n                                        background: 'red'\r\n                                    }}\r\n                                />\r\n                            </>\r\n                        </Draggable>\r\n                    </Paper>\r\n\r\n                </div>\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\nconst mapActiontoProps = {\r\n    setConfig,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapActiontoProps)(StructureEditor)","import React from 'react'\r\nimport ConfigManager from './configManager'\r\nimport StructureEditor from '../components/structureEditor';\r\n\r\nexport default function Structure() {\r\n    return (\r\n        <div className='container'>\r\n            <div className='row' style={{ justifyContent: 'center' }}>\r\n                <div className='col-6' style={{ padding: '1rem' }}>\r\n                    <StructureEditor />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { default_values } from '../../default_value';\r\n\r\nconst default_values_in_store = !!localStorage.getItem('default_config') ? JSON.parse(localStorage.getItem('default_config')) : default_values;\r\n\r\nconst initialState = {\r\n    structure: null,\r\n    rms: { 'rms_block': null, 'rms_xy': null, 'rms_max': null },\r\n    sliderValue: {},\r\n    configValues: default_values_in_store,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_PICS':\r\n            return {\r\n                ...state,\r\n                structure: action.payload[1]\r\n            };\r\n        case 'SET_PLOTS':\r\n            let rms = state.rms;\r\n            rms[action.payload[0]] = action.payload[1]\r\n            return {\r\n                ...state,\r\n                rms: rms\r\n            };\r\n        case 'SET_SLIDER':\r\n            let slider = state.sliderValue;\r\n            slider[action.payload[0]] = action.payload[1]\r\n            return {\r\n                ...state,\r\n                sliderValue: slider\r\n            }\r\n        case 'SET_CONFIG':\r\n            let config = { ...state.configValues };\r\n            let payload = action.payload\r\n            config[payload[0]][payload[1]][payload[2]] = payload[3]\r\n            return {\r\n                ...state,\r\n                configValues: config\r\n            }\r\n        case 'SET_WHOLE_CONFIG':\r\n            return {\r\n                ...state,\r\n                configValues: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\n\r\n\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport dataReducer from './reducer/dataReducers';\r\n\r\nconst reducers = combineReducers({\r\n    data: dataReducer,\r\n});\r\n\r\n\r\nconst initialState = {};\r\n\r\nconst composeEnhancers =\r\n    typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n        : compose;\r\n\r\nconst middleware = [thunkMiddleware];\r\nconst enhancers = [applyMiddleware(...middleware)];\r\nconst enhancer = composeEnhancers(...enhancers);\r\n\r\nconst store = createStore(reducers, initialState, enhancer)\r\n\r\nexport default store;","import React from 'react';\r\nimport './App.css';\r\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport { ApolloClient, createHttpLink, gql, useQuery } from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\n\r\nimport { ApolloProvider } from 'react-apollo';\r\nimport Navbar from './util/Navbar';\r\n\r\n\r\nimport Axios from 'axios';\r\nimport Login from './Auth/Login';\r\nimport Signup from './Auth/Signup';\r\nimport Profile from './pages/profile';\r\nimport secContext from './util/secContext';\r\nimport Home from './pages/home';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport ResultsExplorer from './pages/resultsExplorer';\r\nimport { cache, currentSection } from './util/cache';\r\nimport Structure from './pages/stucture';\r\n//Redux\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nAxios.defaults.baseURL = 'http://127.0.0.1:8000';\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: Axios.defaults.baseURL + '/graphql/',\r\n});\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = localStorage.getItem('authToken') || \"\"\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      Authorization: `JWT ${token}`,\r\n    }\r\n  }\r\n});\r\n\r\nexport const client = new ApolloClient({\r\n  cache,\r\n  fetchOptions: {\r\n    credentials: \"include\"\r\n  },\r\n  link: authLink.concat(httpLink),\r\n});\r\n\r\nfunction App() {\r\n\r\n  // State also contains the updater function so it will\r\n  // be passed down into the context provider\r\n  const changeSecName = (name) => {\r\n    currentSection(name)\r\n  }\r\n  return (\r\n\r\n    <Provider store={store}>\r\n      <ApolloProvider client={client}>\r\n        <secContext.Provider value={{ name: currentSection(), changeSecName }}>\r\n          <Router>\r\n            <Navbar />\r\n            <Switch>\r\n              <Route exact path='/' component={Home} />\r\n              <Route exact path='/config/:sec' component={Home} />\r\n              <Route exact path='/resultsexplorer' component={ResultsExplorer} />\r\n              <Route exact path='/structure/:sec' component={Structure} />\r\n              <Route exact path='/login' component={Login} />\r\n              <Route exact path='/signup' component={Signup} />\r\n              <Route path='/profile/:id' component={Profile} />\r\n            </Switch>\r\n          </Router>\r\n        </secContext.Provider>\r\n      </ApolloProvider>\r\n    </Provider>\r\n  );\r\n}\r\n\r\n\r\nexport const GET_TRACKS_QUERY = gql`\r\n  query getTracksQuery {\r\n      track {\r\n      id\r\n      title\r\n      description\r\n      hashtag\r\n      url\r\n      owner {\r\n      id\r\n        username\r\n    }\r\n    }\r\n}\r\n\r\n`;\r\n\r\n\r\n\r\n\r\n\r\nexport const GET_SELF_QUERY = gql`\r\n{\r\n  userself {\r\n    id\r\n    username\r\n    email\r\n  }\r\n}\r\n`;\r\n\r\nexport const GET_USER_QUERY = gql`\r\nquery($id: Int!){\r\n  user(id: $id){\r\n    id\r\n    username\r\n    email\r\n    dateJoined\r\n    musicSet{\r\n      id\r\n      title\r\n      url\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n\r\nexport default App; \r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}